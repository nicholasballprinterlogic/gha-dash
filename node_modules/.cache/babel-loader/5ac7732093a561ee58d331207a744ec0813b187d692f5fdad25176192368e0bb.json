{"ast":null,"code":"var _jsxFileName = \"/Users/nicholas.ball/Documents/GitHub/gha-dash/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\n\n// Main App component for the GitHub Dashboard\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State for GitHub Personal Access Token (PAT)\n  const [githubToken, setGithubToken] = useState('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');\n  // State to store the list of repositories (e.g., \"owner/repo\")\n  const [repos, setRepos] = useState(() => {\n    // Initialize repos from local storage, or an empty array if not found\n    const savedRepos = localStorage.getItem('githubRepos');\n    return savedRepos ? JSON.parse(savedRepos) : [];\n  });\n  localStorage.setItem('githubRepos', JSON.stringify(['printerlogic/snmp-custom-data', 'printerlogic/api-gateway-app', 'printerlogic/print-stats-api', 'printerlogic/print-stats-worker', 'printerlogic/event-bus-app', 'printerlogic/service-client-status-service-api', 'printerlogic/quota-management-app', 'printerlogic/jobba-the-held-app', 'printerlogic/heir-of-fangorn', 'printerlogic/printer-admin-gw', 'printerlogic/printer-api', 'printerlogic/badge-reader-api', 'printerlogic/docker-images-ops', 'printerlogic/unleash']));\n  // State to store the fetched data for each repository\n  const [repoData, setRepoData] = useState({});\n  // State for loading indicator\n  const [loading, setLoading] = useState(false);\n  // State for any error messages\n  const [error, setError] = useState('');\n  // State for new repository input\n  const [newRepo, setNewRepo] = useState('');\n  // State for the Trivy workflow file name\n  const [trivyWorkflowFileName, setTrivyWorkflowFileName] = useState(() => {\n    // Initialize workflow file name from local storage, or a default value\n    const savedWorkflowName = localStorage.getItem('trivyWorkflowFileName');\n    return savedWorkflowName || 'trivy-scan.yml'; // Default Trivy workflow file name\n  });\n  // State for deployment environments to monitor\n  const [deploymentEnvironments, setDeploymentEnvironments] = useState(() => {\n    // Initialize environments from local storage, or a default value\n    const savedEnvironments = localStorage.getItem('deploymentEnvironments');\n    return savedEnvironments ? JSON.parse(savedEnvironments) : ['service-stack', 'stage', 'canary', 'prod'];\n  });\n  // State for new environment input\n  const [newEnvironment, setNewEnvironment] = useState('');\n\n  // Effect to load GitHub token from local storage on initial render\n  useEffect(() => {\n    const savedToken = localStorage.getItem('githubToken');\n    if (savedToken) {\n      setGithubToken(savedToken);\n    }\n  }, []);\n\n  // Effect to save repos, token, workflow name, and environments to local storage whenever they change\n  useEffect(() => {\n    localStorage.setItem('githubRepos', JSON.stringify(repos));\n  }, [repos]);\n  useEffect(() => {\n    localStorage.setItem('githubToken', githubToken);\n  }, [githubToken]);\n  useEffect(() => {\n    localStorage.setItem('trivyWorkflowFileName', trivyWorkflowFileName);\n  }, [trivyWorkflowFileName]);\n  useEffect(() => {\n    localStorage.setItem('deploymentEnvironments', JSON.stringify(deploymentEnvironments));\n  }, [deploymentEnvironments]);\n\n  // Helper to get standard status color for deployments (e.g., for non-success states)\n  const getStatusColor = useCallback(status => {\n    switch (status) {\n      case 'success':\n        return 'bg-green-500';\n      case 'failure':\n      case 'error':\n        return 'bg-red-500';\n      case 'pending':\n      case 'in_progress':\n        return 'bg-yellow-500';\n      case 'inactive':\n      case 'cancelled':\n        return 'bg-gray-400';\n      default:\n        return 'bg-blue-400';\n      // For unknown or neutral states\n    }\n  }, []);\n\n  // Helper to get color for the timestamp text based on deployment age\n  const getTimestampColor = useCallback(deploymentTimestamp => {\n    if (!deploymentTimestamp) {\n      return 'text-gray-400'; // Default gray for N/A or invalid dates\n    }\n    const now = new Date();\n    const deployDate = new Date(deploymentTimestamp);\n    const diffInMilliseconds = now.getTime() - deployDate.getTime();\n    const diffInWeeks = diffInMilliseconds / (1000 * 60 * 60 * 24 * 7);\n    if (diffInWeeks < 2) {\n      // Less than 2 weeks\n      return 'text-green-400';\n    } else if (diffInWeeks >= 2 && diffInWeeks < 4) {\n      // 2 weeks to less than 4 weeks\n      return 'text-yellow-400';\n    } else if (diffInWeeks >= 4) {\n      // 4 weeks or more\n      return 'text-red-400';\n    } else {\n      return 'text-gray-400'; // Fallback\n    }\n  }, []);\n\n  // Function to fetch deployment information, including the latest status and last successful timestamp\n  const getDeploymentInfo = useCallback(async (owner, repo, environment) => {\n    // Fetch up to 100 deployments to find the most recent successful one\n    const url = `https://api.github.com/repos/${owner}/${repo}/deployments?environment=${environment}&per_page=100`;\n    try {\n      const response = await fetch(url, {\n        headers: {\n          Authorization: `Bearer ${githubToken}`,\n          Accept: 'application/vnd.github.v3+json'\n        }\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`GitHub API error for deployment (${response.status}): ${errorText}`);\n      }\n      const deployments = await response.json();\n      let latestDeploymentInfo = null;\n      let lastSuccessfulDeploymentTimestamp = null;\n      if (deployments.length > 0) {\n        const latestDeployment = deployments[0];\n\n        // Fetch the statuses for the latest deployment to get its actual current state\n        const statusesUrl = latestDeployment.statuses_url;\n        const statusesResponse = await fetch(statusesUrl, {\n          headers: {\n            Authorization: `Bearer ${githubToken}`,\n            Accept: 'application/vnd.github.v3+json'\n          }\n        });\n        if (!statusesResponse.ok) {\n          const errorText = await statusesResponse.text();\n          throw new Error(`GitHub API error for deployment statuses (${statusesResponse.status}): ${errorText}`);\n        }\n        const statuses = await statusesResponse.json();\n        if (statuses.length > 0) {\n          // Sort statuses by creation date to get the latest one\n          const actualLatestStatus = statuses.sort((a, b) => new Date(b.created_at) - new Date(a.created_at))[0];\n          latestDeploymentInfo = {\n            status: actualLatestStatus.state,\n            // Use the state from the actual latest status\n            timestamp: actualLatestStatus.created_at,\n            url: actualLatestStatus.url\n          };\n        } else {\n          // Fallback if no statuses found for the latest deployment\n          latestDeploymentInfo = {\n            status: latestDeployment.state,\n            // Use the deployment object's state as a fallback\n            timestamp: latestDeployment.created_at,\n            url: latestDeployment.url\n          };\n        }\n\n        // Find the most recent successful deployment for the timestamp coloring\n        for (const dep of deployments) {\n          if (dep.state === 'success') {\n            // This state is usually 'active' for successful deployments\n            // We need to check its *statuses* to confirm 'success'\n            const depStatusesUrl = dep.statuses_url;\n            const depStatusesResponse = await fetch(depStatusesUrl, {\n              headers: {\n                Authorization: `Bearer ${githubToken}`,\n                Accept: 'application/vnd.github.v3+json'\n              }\n            });\n            if (depStatusesResponse.ok) {\n              const depStatuses = await depStatusesResponse.json();\n              const successStatus = depStatuses.find(s => s.state === 'success');\n              if (successStatus) {\n                lastSuccessfulDeploymentTimestamp = successStatus.created_at;\n                break; // Found the most recent successful one\n              }\n            }\n          }\n        }\n      }\n      return {\n        latest: latestDeploymentInfo,\n        lastSuccessTimestamp: lastSuccessfulDeploymentTimestamp\n      };\n    } catch (err) {\n      console.error(`Error fetching deployment info for ${owner}/${repo} (${environment}):`, err);\n      return {\n        latest: {\n          status: 'error',\n          timestamp: new Date().toISOString(),\n          url: '#'\n        },\n        lastSuccessTimestamp: null\n      };\n    }\n  }, [githubToken]);\n\n  // Function to fetch the latest workflow run conclusion for a given repo and workflow name\n  // This function is updated to also fetch and parse logs for vulnerability summaries\n  const getLatestWorkflowRuns = useCallback(async (owner, repo, workflowName, count = 5) => {\n    const url = `https://api.github.com/repos/${owner}/${repo}/actions/runs?workflow_id=${workflowName}&per_page=${count}`;\n    try {\n      const response = await fetch(url, {\n        headers: {\n          Authorization: `Bearer ${githubToken}`,\n          Accept: 'application/vnd.github.v3+json'\n        }\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`GitHub API error for workflow runs (${response.status}): ${errorText}`);\n      }\n      const data = await response.json();\n      if (data.workflow_runs && data.workflow_runs.length > 0) {\n        // Use Promise.all to fetch details for all runs concurrently\n        const runsWithDetails = await Promise.all(data.workflow_runs.map(async run => {\n          let vulnerabilitySummary = null;\n          try {\n            // Fetch jobs for the current run\n            const jobsUrl = `https://api.github.com/repos/${owner}/${repo}/actions/runs/${run.id}/jobs`;\n            const jobsResponse = await fetch(jobsUrl, {\n              headers: {\n                Authorization: `Bearer ${githubToken}`,\n                Accept: 'application/vnd.github.v3+json'\n              }\n            });\n            if (!jobsResponse.ok) {\n              const errorText = await jobsResponse.text();\n              throw new Error(`GitHub API error for jobs (${jobsResponse.status}): ${errorText}`);\n            }\n            const jobsData = await jobsResponse.json();\n            // Find a job that likely contains Trivy scan output (heuristic: name includes 'trivy' or 'scan')\n            const trivyJob = jobsData.jobs.find(job => job.name.toLowerCase().includes('trivy') || job.name.toLowerCase().includes('scan'));\n            if (trivyJob) {\n              // Fetch logs for the identified Trivy job\n              const logsUrl = `https://api.github.com/repos/${owner}/${repo}/actions/jobs/${trivyJob.id}/logs`;\n              const logsResponse = await fetch(logsUrl, {\n                headers: {\n                  Authorization: `Bearer ${githubToken}`,\n                  Accept: 'application/vnd.github.v3+json' // Logs are typically plain text but this header works\n                }\n              });\n              if (!logsResponse.ok) {\n                const errorText = await logsResponse.text();\n                throw new Error(`GitHub API error for job logs (${logsResponse.status}): ${errorText}`);\n              }\n              const logsText = await logsResponse.text(); // Get logs as plain text\n\n              // Regex to find the vulnerability summary line, similar to: \"Total: 1 (LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)\"\n              const regex = /Total: \\d+ \\(LOW: (\\d+), MEDIUM: (\\d+), HIGH: (\\d+), CRITICAL: (\\d+)\\)/;\n              const match = logsText.match(regex);\n              if (match) {\n                vulnerabilitySummary = match[0];\n                // Store individual counts for highlighting logic\n                run.lowCount = parseInt(match[1]);\n                run.mediumCount = parseInt(match[2]);\n                run.highCount = parseInt(match[3]);\n                run.criticalCount = parseInt(match[4]);\n              }\n            }\n          } catch (jobErr) {\n            console.warn(`Could not fetch job/log details for run ${run.id} in ${owner}/${repo}:`, jobErr);\n            vulnerabilitySummary = 'Error fetching details';\n          }\n          return {\n            conclusion: run.conclusion,\n            timestamp: run.created_at,\n            url: run.html_url,\n            id: run.id,\n            // Ensure ID is present for unique keys in lists\n            vulnerabilitySummary: vulnerabilitySummary,\n            lowCount: run.lowCount || 0,\n            // Ensure default 0 if not found\n            mediumCount: run.mediumCount || 0,\n            highCount: run.highCount || 0,\n            criticalCount: run.criticalCount || 0\n          };\n        }));\n        return runsWithDetails;\n      }\n    } catch (err) {\n      console.error(`Error fetching workflow runs for ${owner}/${repo} (${workflowName}):`, err);\n      return [];\n    }\n    return [];\n  }, [githubToken]); // Recreate if githubToken changes\n\n  // Function to fetch all data for all monitored repositories\n  const fetchAllRepoData = useCallback(async () => {\n    if (!githubToken) {\n      setError('Please enter your GitHub Personal Access Token.');\n      setRepoData({});\n      return;\n    }\n    setLoading(true);\n    setError('');\n    const newRepoData = {};\n    for (const repoFullName of repos) {\n      const [owner, repo] = repoFullName.split('/');\n      if (!owner || !repo) {\n        newRepoData[repoFullName] = {\n          error: 'Invalid repository format'\n        };\n        continue;\n      }\n      const deployments = {};\n      for (const env of deploymentEnvironments) {\n        deployments[env] = await getDeploymentInfo(owner, repo, env); // Use getDeploymentInfo\n      }\n\n      // Fetch multiple Trivy scan runs with their details\n      const trivyScans = await getLatestWorkflowRuns(owner, repo, trivyWorkflowFileName);\n      newRepoData[repoFullName] = {\n        deployments,\n        trivyScans\n      };\n    }\n    setRepoData(newRepoData);\n    setLoading(false);\n  }, [githubToken, repos, trivyWorkflowFileName, deploymentEnvironments, getDeploymentInfo, getLatestWorkflowRuns]); // Recreate if these dependencies change\n\n  // Effect to fetch data when repos or token changes\n  useEffect(() => {\n    fetchAllRepoData();\n  }, [fetchAllRepoData]);\n\n  // Handler for adding a new repository\n  const handleAddRepo = () => {\n    const trimmedRepo = newRepo.trim();\n    if (trimmedRepo && !repos.includes(trimmedRepo)) {\n      setRepos([...repos, trimmedRepo]);\n      setNewRepo('');\n    }\n  };\n\n  // Handler for removing a repository\n  const handleRemoveRepo = repoToRemove => {\n    setRepos(repos.filter(repo => repo !== repoToRemove));\n    setRepoData(prevData => {\n      const newData = {\n        ...prevData\n      };\n      delete newData[repoToRemove];\n      return newData;\n    });\n  };\n\n  // Handler for adding a new environment\n  const handleAddEnvironment = () => {\n    const trimmedEnv = newEnvironment.trim().toLowerCase();\n    if (trimmedEnv && !deploymentEnvironments.includes(trimmedEnv)) {\n      setDeploymentEnvironments([...deploymentEnvironments, trimmedEnv]);\n      setNewEnvironment('');\n    }\n  };\n\n  // Handler for removing an environment\n  const handleRemoveEnvironment = envToRemove => {\n    setDeploymentEnvironments(deploymentEnvironments.filter(env => env !== envToRemove));\n  };\n\n  // Helper to format date\n  const formatDate = isoString => {\n    if (!isoString || isoString === '#') return 'N/A';\n    try {\n      return new Date(isoString).toLocaleString();\n    } catch (e) {\n      return 'Invalid Date';\n    }\n  };\n\n  // Helper to get color for workflow run conclusions\n  const getConclusionColor = conclusion => {\n    switch (conclusion) {\n      case 'success':\n        return 'bg-green-500';\n      case 'failure':\n        return 'bg-red-500';\n      case 'neutral':\n        return 'bg-gray-500';\n      case 'cancelled':\n        return 'bg-yellow-500';\n      case 'skipped':\n        return 'bg-indigo-500';\n      case 'timed_out':\n        return 'bg-orange-500';\n      case 'action_required':\n        return 'bg-purple-500';\n      default:\n        return 'bg-blue-400';\n    }\n  };\n\n  // Helper to determine if Trivy summary should be highlighted\n  const shouldHighlightTrivySummary = run => {\n    return run.lowCount > 0 || run.mediumCount > 0 || run.highCount > 0 || run.criticalCount > 0;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-gray-900 to-black text-gray-100 p-4 font-inter\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto p-6 bg-gray-800 rounded-xl shadow-2xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl font-extrabold text-center mb-8 text-transparent bg-clip-text bg-gradient-to-r from-purple-400 to-pink-600\",\n        children: \"GitHub Repo Status Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-8 p-6 bg-gray-700 rounded-lg shadow-inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"githubToken\",\n          className: \"block text-lg font-semibold mb-2 text-purple-300\",\n          children: \"GitHub Personal Access Token (PAT):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"githubToken\",\n          className: \"w-full p-3 rounded-md bg-gray-900 border border-gray-600 focus:border-purple-500 focus:ring focus:ring-purple-500 focus:ring-opacity-50 text-white\",\n          value: githubToken,\n          onChange: e => setGithubToken(e.target.value),\n          placeholder: \"Enter your GitHub PAT (e.g., gh_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-400 mt-2\",\n          children: \"Your PAT is stored locally in your browser. It needs 'repo' (or 'repo:status') and 'actions:read' scopes.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-8 p-6 bg-gray-700 rounded-lg shadow-inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold mb-4 text-pink-300\",\n          children: \"Configuration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"trivyWorkflow\",\n            className: \"block text-lg font-semibold mb-2 text-purple-300\",\n            children: \"Trivy Workflow File Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"trivyWorkflow\",\n            className: \"w-full p-3 rounded-md bg-gray-900 border border-gray-600 focus:border-purple-500 focus:ring focus:ring-purple-500 focus:ring-opacity-50 text-white\",\n            value: trivyWorkflowFileName,\n            onChange: e => setTrivyWorkflowFileName(e.target.value),\n            placeholder: \"e.g., trivy-scan.yml\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-400 mt-2\",\n            children: \"The exact filename of your Trivy GitHub Actions workflow (e.g., `trivy-scan.yml`).\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block text-lg font-semibold mb-2 text-purple-300\",\n            children: \"Deployment Environments to Monitor:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-wrap gap-2 mb-2\",\n            children: deploymentEnvironments.map(env => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"flex items-center bg-purple-600 text-white text-sm px-3 py-1 rounded-full shadow-md\",\n              children: [env, /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleRemoveEnvironment(env),\n                className: \"ml-2 text-purple-200 hover:text-white focus:outline-none\",\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 23\n              }, this)]\n            }, env, true, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"flex-grow p-3 rounded-md bg-gray-900 border border-gray-600 focus:border-purple-500 focus:ring focus:ring-purple-500 focus:ring-opacity-50 text-white\",\n              value: newEnvironment,\n              onChange: e => setNewEnvironment(e.target.value),\n              placeholder: \"Add new environment (e.g., dev)\",\n              onKeyPress: e => {\n                if (e.key === 'Enter') {\n                  handleAddEnvironment();\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleAddEnvironment,\n              className: \"px-5 py-3 bg-purple-700 hover:bg-purple-800 text-white font-bold rounded-md shadow-lg transition duration-300 ease-in-out transform hover:scale-105\",\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-8 p-6 bg-gray-700 rounded-lg shadow-inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold mb-4 text-pink-300\",\n          children: \"Manage Repositories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-2 mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"flex-grow p-3 rounded-md bg-gray-900 border border-gray-600 focus:border-purple-500 focus:ring focus:ring-purple-500 focus:ring-opacity-50 text-white\",\n            value: newRepo,\n            onChange: e => setNewRepo(e.target.value),\n            placeholder: \"Add new repo (e.g., PrinterLogic/snmp-custom-data)\",\n            onKeyPress: e => {\n              if (e.key === 'Enter') {\n                handleAddRepo();\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAddRepo,\n            className: \"px-5 py-3 bg-green-600 hover:bg-green-700 text-white font-bold rounded-md shadow-lg transition duration-300 ease-in-out transform hover:scale-105\",\n            children: \"Add Repo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-wrap gap-2\",\n          children: repos.map(repo => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"flex items-center bg-gray-600 text-white text-sm px-3 py-1 rounded-full shadow-md\",\n            children: [repo, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleRemoveRepo(repo),\n              className: \"ml-2 text-gray-300 hover:text-white focus:outline-none\",\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 21\n            }, this)]\n          }, repo, true, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center gap-4 mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: fetchAllRepoData,\n          disabled: loading || !githubToken || repos.length === 0,\n          className: `px-8 py-4 bg-blue-600 hover:bg-blue-700 text-white font-bold rounded-full shadow-xl transition duration-300 ease-in-out transform hover:scale-105 ${loading ? 'opacity-50 cursor-not-allowed' : ''}`,\n          children: loading ? 'Refreshing...' : 'Refresh All Statuses'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setRepos([]);\n            setRepoData({});\n            setError('');\n          },\n          className: \"px-8 py-4 bg-red-600 hover:bg-red-700 text-white font-bold rounded-full shadow-xl transition duration-300 ease-in-out transform hover:scale-105\",\n          children: \"Clear All Repos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-red-800 text-white p-4 rounded-lg mb-8 shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold\",\n          children: \"Error:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 gap-4\",\n        children: [repos.length === 0 && !loading && !error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"col-span-full text-center text-gray-400 text-xl\",\n          children: \"Add some repositories to start monitoring!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 17\n        }, this), repos.map(repoFullName => {\n          const data = repoData[repoFullName];\n          // const [owner, repoName] = repoFullName.split('/'); // owner and repoName are not directly used in rendering repo card title\n\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-700 rounded-xl shadow-lg p-6 border border-gray-600 hover:border-purple-500 transition duration-200 ease-in-out transform hover:scale-[1.02]\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-2xl font-bold mb-4 text-purple-400 flex items-center justify-between\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: `https://github.com/${repoFullName}`,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                className: \"hover:underline\",\n                children: repoFullName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 587,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 586,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"text-lg font-semibold text-pink-200 mb-2\",\n                children: \"Deployments:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 599,\n                columnNumber: 23\n              }, this), data !== null && data !== void 0 && data.deployments && Object.keys(data.deployments).length > 0 ? Object.entries(data.deployments).map(([env, deploymentInfo]) => {\n                var _deploymentInfo$lates;\n                // Add console log here\n                console.log('Deployment Info for', env, ':', deploymentInfo);\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center mb-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-medium text-gray-300 w-24 capitalize\",\n                    children: [env, \":\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 606,\n                    columnNumber: 35\n                  }, this), deploymentInfo !== null && deploymentInfo !== void 0 && deploymentInfo.latest ? /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: deploymentInfo.latest.url.replace('/statuses', '') // Link to the deployment itself\n                    ,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    className: `px-3 py-1 rounded-full text-sm font-bold text-white ${getStatusColor(deploymentInfo.latest.status)} mr-2 hover:opacity-80` // Reverted to getStatusColor\n                    ,\n                    children: deploymentInfo.latest.status || 'N/A'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 608,\n                    columnNumber: 39\n                  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"px-3 py-1 rounded-full text-sm font-bold text-white bg-gray-500 mr-2\",\n                    children: \"No Deployments\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 617,\n                    columnNumber: 39\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `text-xs ${getTimestampColor(deploymentInfo === null || deploymentInfo === void 0 ? void 0 : (_deploymentInfo$lates = deploymentInfo.latest) === null || _deploymentInfo$lates === void 0 ? void 0 : _deploymentInfo$lates.timestamp)}`,\n                    children: deploymentInfo !== null && deploymentInfo !== void 0 && deploymentInfo.latest ? formatDate(deploymentInfo.latest.timestamp) : ''\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 622,\n                    columnNumber: 35\n                  }, this)]\n                }, env, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 605,\n                  columnNumber: 33\n                }, this);\n              }) : /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-400 text-sm\",\n                children: \"No deployment data available or environments configured.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 629,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"text-lg font-semibold text-pink-200 mb-2\",\n                children: \"Trivy Scan (Last 5 Runs):\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 635,\n                columnNumber: 23\n              }, this), data !== null && data !== void 0 && data.trivyScans && data.trivyScans.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-1\",\n                children: data.trivyScans.map((run, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex flex-col mb-2 p-2 bg-gray-600 rounded-md\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center text-sm mb-1\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"font-medium text-gray-300 w-16\",\n                      children: [\"Run \", index + 1, \":\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 641,\n                      columnNumber: 37\n                    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                      href: run.url,\n                      target: \"_blank\",\n                      rel: \"noopener noreferrer\",\n                      className: `px-2 py-0.5 rounded-full text-xs font-bold text-white ${getConclusionColor(run.conclusion)} mr-2 hover:opacity-80`,\n                      children: run.conclusion || 'N/A'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 642,\n                      columnNumber: 37\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"text-xs text-gray-400\",\n                      children: formatDate(run.timestamp)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 650,\n                      columnNumber: 37\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 640,\n                    columnNumber: 35\n                  }, this), run.vulnerabilitySummary && /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: `text-xs ml-16 ${shouldHighlightTrivySummary(run) ? 'text-yellow-400' : 'text-gray-300'}`,\n                    children: run.vulnerabilitySummary\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 655,\n                    columnNumber: 39\n                  }, this), !run.vulnerabilitySummary && run.conclusion !== 'error' && /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-xs text-gray-400 ml-16\",\n                    children: \"Summary not found in logs.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 660,\n                    columnNumber: 39\n                  }, this)]\n                }, run.id || index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 639,\n                  columnNumber: 33\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 637,\n                columnNumber: 27\n              }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-400 text-sm\",\n                children: \"No Trivy scan runs found or workflow not configured.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 668,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 634,\n              columnNumber: 21\n            }, this), (data === null || data === void 0 ? void 0 : data.error) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4 text-red-400 text-sm\",\n              children: [\"Error: \", data.error]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 672,\n              columnNumber: 25\n            }, this)]\n          }, repoFullName, true, {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 19\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 418,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"0QAN3t3UTvU2pfighGeD2yP6bxs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsxDEV","_jsxDEV","App","_s","githubToken","setGithubToken","repos","setRepos","savedRepos","localStorage","getItem","JSON","parse","setItem","stringify","repoData","setRepoData","loading","setLoading","error","setError","newRepo","setNewRepo","trivyWorkflowFileName","setTrivyWorkflowFileName","savedWorkflowName","deploymentEnvironments","setDeploymentEnvironments","savedEnvironments","newEnvironment","setNewEnvironment","savedToken","getStatusColor","status","getTimestampColor","deploymentTimestamp","now","Date","deployDate","diffInMilliseconds","getTime","diffInWeeks","getDeploymentInfo","owner","repo","environment","url","response","fetch","headers","Authorization","Accept","ok","errorText","text","Error","deployments","json","latestDeploymentInfo","lastSuccessfulDeploymentTimestamp","length","latestDeployment","statusesUrl","statuses_url","statusesResponse","statuses","actualLatestStatus","sort","a","b","created_at","state","timestamp","dep","depStatusesUrl","depStatusesResponse","depStatuses","successStatus","find","s","latest","lastSuccessTimestamp","err","console","toISOString","getLatestWorkflowRuns","workflowName","count","data","workflow_runs","runsWithDetails","Promise","all","map","run","vulnerabilitySummary","jobsUrl","id","jobsResponse","jobsData","trivyJob","jobs","job","name","toLowerCase","includes","logsUrl","logsResponse","logsText","regex","match","lowCount","parseInt","mediumCount","highCount","criticalCount","jobErr","warn","conclusion","html_url","fetchAllRepoData","newRepoData","repoFullName","split","env","trivyScans","handleAddRepo","trimmedRepo","trim","handleRemoveRepo","repoToRemove","filter","prevData","newData","handleAddEnvironment","trimmedEnv","handleRemoveEnvironment","envToRemove","formatDate","isoString","toLocaleString","e","getConclusionColor","shouldHighlightTrivySummary","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","value","onChange","target","placeholder","onClick","onKeyPress","key","disabled","href","rel","Object","keys","entries","deploymentInfo","_deploymentInfo$lates","log","replace","index","_c","$RefreshReg$"],"sources":["/Users/nicholas.ball/Documents/GitHub/gha-dash/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\n// Main App component for the GitHub Dashboard\nfunction App() {\n  // State for GitHub Personal Access Token (PAT)\n  const [githubToken, setGithubToken] = useState('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');\n  // State to store the list of repositories (e.g., \"owner/repo\")\n  const [repos, setRepos] = useState(() => {\n    // Initialize repos from local storage, or an empty array if not found\n    const savedRepos = localStorage.getItem('githubRepos');\n    return savedRepos ? JSON.parse(savedRepos) : [];\n  });\n  localStorage.setItem('githubRepos', JSON.stringify([\n    'printerlogic/snmp-custom-data',\n    'printerlogic/api-gateway-app',\n    'printerlogic/print-stats-api',\n    'printerlogic/print-stats-worker',\n    'printerlogic/event-bus-app',\n    'printerlogic/service-client-status-service-api',\n    'printerlogic/quota-management-app',\n    'printerlogic/jobba-the-held-app',\n    'printerlogic/heir-of-fangorn',\n    'printerlogic/printer-admin-gw',\n    'printerlogic/printer-api',\n    'printerlogic/badge-reader-api',\n    'printerlogic/docker-images-ops',\n    'printerlogic/unleash',\n  ]));\n  // State to store the fetched data for each repository\n  const [repoData, setRepoData] = useState({});\n  // State for loading indicator\n  const [loading, setLoading] = useState(false);\n  // State for any error messages\n  const [error, setError] = useState('');\n  // State for new repository input\n  const [newRepo, setNewRepo] = useState('');\n  // State for the Trivy workflow file name\n  const [trivyWorkflowFileName, setTrivyWorkflowFileName] = useState(() => {\n    // Initialize workflow file name from local storage, or a default value\n    const savedWorkflowName = localStorage.getItem('trivyWorkflowFileName');\n    return savedWorkflowName || 'trivy-scan.yml'; // Default Trivy workflow file name\n  });\n  // State for deployment environments to monitor\n  const [deploymentEnvironments, setDeploymentEnvironments] = useState(() => {\n    // Initialize environments from local storage, or a default value\n    const savedEnvironments = localStorage.getItem('deploymentEnvironments');\n    return savedEnvironments ? JSON.parse(savedEnvironments) : ['service-stack', 'stage', 'canary', 'prod'];\n  });\n  // State for new environment input\n  const [newEnvironment, setNewEnvironment] = useState('');\n\n\n  // Effect to load GitHub token from local storage on initial render\n  useEffect(() => {\n    const savedToken = localStorage.getItem('githubToken');\n    if (savedToken) {\n      setGithubToken(savedToken);\n    }\n  }, []);\n\n  // Effect to save repos, token, workflow name, and environments to local storage whenever they change\n  useEffect(() => {\n    localStorage.setItem('githubRepos', JSON.stringify(repos));\n  }, [repos]);\n\n  useEffect(() => {\n    localStorage.setItem('githubToken', githubToken);\n  }, [githubToken]);\n\n  useEffect(() => {\n    localStorage.setItem('trivyWorkflowFileName', trivyWorkflowFileName);\n  }, [trivyWorkflowFileName]);\n\n  useEffect(() => {\n    localStorage.setItem('deploymentEnvironments', JSON.stringify(deploymentEnvironments));\n  }, [deploymentEnvironments]);\n\n\n  // Helper to get standard status color for deployments (e.g., for non-success states)\n  const getStatusColor = useCallback((status) => {\n    switch (status) {\n      case 'success':\n        return 'bg-green-500';\n      case 'failure':\n      case 'error':\n        return 'bg-red-500';\n      case 'pending':\n      case 'in_progress':\n        return 'bg-yellow-500';\n      case 'inactive':\n      case 'cancelled':\n        return 'bg-gray-400';\n      default:\n        return 'bg-blue-400'; // For unknown or neutral states\n    }\n  }, []);\n\n  // Helper to get color for the timestamp text based on deployment age\n  const getTimestampColor = useCallback((deploymentTimestamp) => {\n    if (!deploymentTimestamp) {\n      return 'text-gray-400'; // Default gray for N/A or invalid dates\n    }\n\n    const now = new Date();\n    const deployDate = new Date(deploymentTimestamp);\n    const diffInMilliseconds = now.getTime() - deployDate.getTime();\n    const diffInWeeks = diffInMilliseconds / (1000 * 60 * 60 * 24 * 7);\n\n    if (diffInWeeks < 2) { // Less than 2 weeks\n      return 'text-green-400';\n    } else if (diffInWeeks >= 2 && diffInWeeks < 4) { // 2 weeks to less than 4 weeks\n      return 'text-yellow-400';\n    } else if (diffInWeeks >= 4) { // 4 weeks or more\n      return 'text-red-400';\n    } else {\n      return 'text-gray-400'; // Fallback\n    }\n  }, []);\n\n\n  // Function to fetch deployment information, including the latest status and last successful timestamp\n  const getDeploymentInfo = useCallback(async (owner, repo, environment) => {\n    // Fetch up to 100 deployments to find the most recent successful one\n    const url = `https://api.github.com/repos/${owner}/${repo}/deployments?environment=${environment}&per_page=100`;\n    try {\n      const response = await fetch(url, {\n        headers: {\n          Authorization: `Bearer ${githubToken}`,\n          Accept: 'application/vnd.github.v3+json',\n        },\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`GitHub API error for deployment (${response.status}): ${errorText}`);\n      }\n      const deployments = await response.json();\n\n      let latestDeploymentInfo = null;\n      let lastSuccessfulDeploymentTimestamp = null;\n\n      if (deployments.length > 0) {\n        const latestDeployment = deployments[0];\n\n        // Fetch the statuses for the latest deployment to get its actual current state\n        const statusesUrl = latestDeployment.statuses_url;\n        const statusesResponse = await fetch(statusesUrl, {\n          headers: {\n            Authorization: `Bearer ${githubToken}`,\n            Accept: 'application/vnd.github.v3+json',\n          },\n        });\n        if (!statusesResponse.ok) {\n          const errorText = await statusesResponse.text();\n          throw new Error(`GitHub API error for deployment statuses (${statusesResponse.status}): ${errorText}`);\n        }\n        const statuses = await statusesResponse.json();\n\n        if (statuses.length > 0) {\n          // Sort statuses by creation date to get the latest one\n          const actualLatestStatus = statuses.sort((a, b) => new Date(b.created_at) - new Date(a.created_at))[0];\n          latestDeploymentInfo = {\n            status: actualLatestStatus.state, // Use the state from the actual latest status\n            timestamp: actualLatestStatus.created_at,\n            url: actualLatestStatus.url,\n          };\n        } else {\n          // Fallback if no statuses found for the latest deployment\n          latestDeploymentInfo = {\n            status: latestDeployment.state, // Use the deployment object's state as a fallback\n            timestamp: latestDeployment.created_at,\n            url: latestDeployment.url,\n          };\n        }\n\n        // Find the most recent successful deployment for the timestamp coloring\n        for (const dep of deployments) {\n          if (dep.state === 'success') { // This state is usually 'active' for successful deployments\n            // We need to check its *statuses* to confirm 'success'\n            const depStatusesUrl = dep.statuses_url;\n            const depStatusesResponse = await fetch(depStatusesUrl, {\n              headers: {\n                Authorization: `Bearer ${githubToken}`,\n                Accept: 'application/vnd.github.v3+json',\n              },\n            });\n            if (depStatusesResponse.ok) {\n              const depStatuses = await depStatusesResponse.json();\n              const successStatus = depStatuses.find(s => s.state === 'success');\n              if (successStatus) {\n                lastSuccessfulDeploymentTimestamp = successStatus.created_at;\n                break; // Found the most recent successful one\n              }\n            }\n          }\n        }\n      }\n\n      return {\n        latest: latestDeploymentInfo,\n        lastSuccessTimestamp: lastSuccessfulDeploymentTimestamp,\n      };\n\n    } catch (err) {\n      console.error(`Error fetching deployment info for ${owner}/${repo} (${environment}):`, err);\n      return {\n        latest: { status: 'error', timestamp: new Date().toISOString(), url: '#' },\n        lastSuccessTimestamp: null,\n      };\n    }\n  }, [githubToken]);\n\n\n  // Function to fetch the latest workflow run conclusion for a given repo and workflow name\n  // This function is updated to also fetch and parse logs for vulnerability summaries\n  const getLatestWorkflowRuns = useCallback(async (owner, repo, workflowName, count = 5) => {\n    const url = `https://api.github.com/repos/${owner}/${repo}/actions/runs?workflow_id=${workflowName}&per_page=${count}`;\n    try {\n      const response = await fetch(url, {\n        headers: {\n          Authorization: `Bearer ${githubToken}`,\n          Accept: 'application/vnd.github.v3+json',\n        },\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`GitHub API error for workflow runs (${response.status}): ${errorText}`);\n      }\n      const data = await response.json();\n\n      if (data.workflow_runs && data.workflow_runs.length > 0) {\n        // Use Promise.all to fetch details for all runs concurrently\n        const runsWithDetails = await Promise.all(data.workflow_runs.map(async (run) => {\n          let vulnerabilitySummary = null;\n          try {\n            // Fetch jobs for the current run\n            const jobsUrl = `https://api.github.com/repos/${owner}/${repo}/actions/runs/${run.id}/jobs`;\n            const jobsResponse = await fetch(jobsUrl, {\n              headers: {\n                Authorization: `Bearer ${githubToken}`,\n                Accept: 'application/vnd.github.v3+json',\n              },\n            });\n            if (!jobsResponse.ok) {\n              const errorText = await jobsResponse.text();\n              throw new Error(`GitHub API error for jobs (${jobsResponse.status}): ${errorText}`);\n            }\n            const jobsData = await jobsResponse.json();\n            // Find a job that likely contains Trivy scan output (heuristic: name includes 'trivy' or 'scan')\n            const trivyJob = jobsData.jobs.find(job =>\n                job.name.toLowerCase().includes('trivy') ||\n                job.name.toLowerCase().includes('scan')\n            );\n\n            if (trivyJob) {\n              // Fetch logs for the identified Trivy job\n              const logsUrl = `https://api.github.com/repos/${owner}/${repo}/actions/jobs/${trivyJob.id}/logs`;\n              const logsResponse = await fetch(logsUrl, {\n                headers: {\n                  Authorization: `Bearer ${githubToken}`,\n                  Accept: 'application/vnd.github.v3+json', // Logs are typically plain text but this header works\n                },\n              });\n              if (!logsResponse.ok) {\n                const errorText = await logsResponse.text();\n                throw new Error(`GitHub API error for job logs (${logsResponse.status}): ${errorText}`);\n              }\n              const logsText = await logsResponse.text(); // Get logs as plain text\n\n              // Regex to find the vulnerability summary line, similar to: \"Total: 1 (LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)\"\n              const regex = /Total: \\d+ \\(LOW: (\\d+), MEDIUM: (\\d+), HIGH: (\\d+), CRITICAL: (\\d+)\\)/;\n              const match = logsText.match(regex);\n              if (match) {\n                vulnerabilitySummary = match[0];\n                // Store individual counts for highlighting logic\n                run.lowCount = parseInt(match[1]);\n                run.mediumCount = parseInt(match[2]);\n                run.highCount = parseInt(match[3]);\n                run.criticalCount = parseInt(match[4]);\n              }\n            }\n          } catch (jobErr) {\n            console.warn(`Could not fetch job/log details for run ${run.id} in ${owner}/${repo}:`, jobErr);\n            vulnerabilitySummary = 'Error fetching details';\n          }\n          return {\n            conclusion: run.conclusion,\n            timestamp: run.created_at,\n            url: run.html_url,\n            id: run.id, // Ensure ID is present for unique keys in lists\n            vulnerabilitySummary: vulnerabilitySummary,\n            lowCount: run.lowCount || 0, // Ensure default 0 if not found\n            mediumCount: run.mediumCount || 0,\n            highCount: run.highCount || 0,\n            criticalCount: run.criticalCount || 0,\n          };\n        }));\n        return runsWithDetails;\n      }\n    } catch (err) {\n      console.error(`Error fetching workflow runs for ${owner}/${repo} (${workflowName}):`, err);\n      return [];\n    }\n    return [];\n  }, [githubToken]); // Recreate if githubToken changes\n\n  // Function to fetch all data for all monitored repositories\n  const fetchAllRepoData = useCallback(async () => {\n    if (!githubToken) {\n      setError('Please enter your GitHub Personal Access Token.');\n      setRepoData({});\n      return;\n    }\n    setLoading(true);\n    setError('');\n    const newRepoData = {};\n\n    for (const repoFullName of repos) {\n      const [owner, repo] = repoFullName.split('/');\n      if (!owner || !repo) {\n        newRepoData[repoFullName] = { error: 'Invalid repository format' };\n        continue;\n      }\n\n      const deployments = {};\n      for (const env of deploymentEnvironments) {\n        deployments[env] = await getDeploymentInfo(owner, repo, env); // Use getDeploymentInfo\n      }\n\n      // Fetch multiple Trivy scan runs with their details\n      const trivyScans = await getLatestWorkflowRuns(owner, repo, trivyWorkflowFileName);\n\n      newRepoData[repoFullName] = {\n        deployments,\n        trivyScans,\n      };\n    }\n    setRepoData(newRepoData);\n    setLoading(false);\n  }, [githubToken, repos, trivyWorkflowFileName, deploymentEnvironments, getDeploymentInfo, getLatestWorkflowRuns]); // Recreate if these dependencies change\n\n  // Effect to fetch data when repos or token changes\n  useEffect(() => {\n    fetchAllRepoData();\n  }, [fetchAllRepoData]);\n\n  // Handler for adding a new repository\n  const handleAddRepo = () => {\n    const trimmedRepo = newRepo.trim();\n    if (trimmedRepo && !repos.includes(trimmedRepo)) {\n      setRepos([...repos, trimmedRepo]);\n      setNewRepo('');\n    }\n  };\n\n  // Handler for removing a repository\n  const handleRemoveRepo = (repoToRemove) => {\n    setRepos(repos.filter(repo => repo !== repoToRemove));\n    setRepoData(prevData => {\n      const newData = { ...prevData };\n      delete newData[repoToRemove];\n      return newData;\n    });\n  };\n\n  // Handler for adding a new environment\n  const handleAddEnvironment = () => {\n    const trimmedEnv = newEnvironment.trim().toLowerCase();\n    if (trimmedEnv && !deploymentEnvironments.includes(trimmedEnv)) {\n      setDeploymentEnvironments([...deploymentEnvironments, trimmedEnv]);\n      setNewEnvironment('');\n    }\n  };\n\n  // Handler for removing an environment\n  const handleRemoveEnvironment = (envToRemove) => {\n    setDeploymentEnvironments(deploymentEnvironments.filter(env => env !== envToRemove));\n  };\n\n  // Helper to format date\n  const formatDate = (isoString) => {\n    if (!isoString || isoString === '#') return 'N/A';\n    try {\n      return new Date(isoString).toLocaleString();\n    } catch (e) {\n      return 'Invalid Date';\n    }\n  };\n\n\n  // Helper to get color for workflow run conclusions\n  const getConclusionColor = (conclusion) => {\n    switch (conclusion) {\n      case 'success':\n        return 'bg-green-500';\n      case 'failure':\n        return 'bg-red-500';\n      case 'neutral':\n        return 'bg-gray-500';\n      case 'cancelled':\n        return 'bg-yellow-500';\n      case 'skipped':\n        return 'bg-indigo-500';\n      case 'timed_out':\n        return 'bg-orange-500';\n      case 'action_required':\n        return 'bg-purple-500';\n      default:\n        return 'bg-blue-400';\n    }\n  };\n\n  // Helper to determine if Trivy summary should be highlighted\n  const shouldHighlightTrivySummary = (run) => {\n    return run.lowCount > 0 || run.mediumCount > 0 || run.highCount > 0 || run.criticalCount > 0;\n  };\n\n  return (\n      <div className=\"min-h-screen bg-gradient-to-br from-gray-900 to-black text-gray-100 p-4 font-inter\">\n        <div className=\"container mx-auto p-6 bg-gray-800 rounded-xl shadow-2xl\">\n          <h1 className=\"text-4xl font-extrabold text-center mb-8 text-transparent bg-clip-text bg-gradient-to-r from-purple-400 to-pink-600\">\n            GitHub Repo Status Dashboard\n          </h1>\n\n          {/* GitHub Token Input */}\n          <div className=\"mb-8 p-6 bg-gray-700 rounded-lg shadow-inner\">\n            <label htmlFor=\"githubToken\" className=\"block text-lg font-semibold mb-2 text-purple-300\">\n              GitHub Personal Access Token (PAT):\n            </label>\n            <input\n                type=\"password\"\n                id=\"githubToken\"\n                className=\"w-full p-3 rounded-md bg-gray-900 border border-gray-600 focus:border-purple-500 focus:ring focus:ring-purple-500 focus:ring-opacity-50 text-white\"\n                value={githubToken}\n                onChange={(e) => setGithubToken(e.target.value)}\n                placeholder=\"Enter your GitHub PAT (e.g., gh_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx)\"\n            />\n            <p className=\"text-sm text-gray-400 mt-2\">\n              Your PAT is stored locally in your browser. It needs 'repo' (or 'repo:status') and 'actions:read' scopes.\n            </p>\n          </div>\n\n          {/* Configuration Section */}\n          <div className=\"mb-8 p-6 bg-gray-700 rounded-lg shadow-inner\">\n            <h2 className=\"text-2xl font-bold mb-4 text-pink-300\">Configuration</h2>\n\n            {/* Trivy Workflow File Name */}\n            <div className=\"mb-4\">\n              <label htmlFor=\"trivyWorkflow\" className=\"block text-lg font-semibold mb-2 text-purple-300\">\n                Trivy Workflow File Name:\n              </label>\n              <input\n                  type=\"text\"\n                  id=\"trivyWorkflow\"\n                  className=\"w-full p-3 rounded-md bg-gray-900 border border-gray-600 focus:border-purple-500 focus:ring focus:ring-purple-500 focus:ring-opacity-50 text-white\"\n                  value={trivyWorkflowFileName}\n                  onChange={(e) => setTrivyWorkflowFileName(e.target.value)}\n                  placeholder=\"e.g., trivy-scan.yml\"\n              />\n              <p className=\"text-sm text-gray-400 mt-2\">\n                The exact filename of your Trivy GitHub Actions workflow (e.g., `trivy-scan.yml`).\n              </p>\n            </div>\n\n            {/* Deployment Environments */}\n            <div>\n              <label className=\"block text-lg font-semibold mb-2 text-purple-300\">\n                Deployment Environments to Monitor:\n              </label>\n              <div className=\"flex flex-wrap gap-2 mb-2\">\n                {deploymentEnvironments.map((env) => (\n                    <span key={env} className=\"flex items-center bg-purple-600 text-white text-sm px-3 py-1 rounded-full shadow-md\">\n                                    {env}\n                      <button\n                          onClick={() => handleRemoveEnvironment(env)}\n                          className=\"ml-2 text-purple-200 hover:text-white focus:outline-none\"\n                      >\n                                        &times;\n                                    </button>\n                                </span>\n                ))}\n              </div>\n              <div className=\"flex gap-2\">\n                <input\n                    type=\"text\"\n                    className=\"flex-grow p-3 rounded-md bg-gray-900 border border-gray-600 focus:border-purple-500 focus:ring focus:ring-purple-500 focus:ring-opacity-50 text-white\"\n                    value={newEnvironment}\n                    onChange={(e) => setNewEnvironment(e.target.value)}\n                    placeholder=\"Add new environment (e.g., dev)\"\n                    onKeyPress={(e) => {\n                      if (e.key === 'Enter') {\n                        handleAddEnvironment();\n                      }\n                    }}\n                />\n                <button\n                    onClick={handleAddEnvironment}\n                    className=\"px-5 py-3 bg-purple-700 hover:bg-purple-800 text-white font-bold rounded-md shadow-lg transition duration-300 ease-in-out transform hover:scale-105\"\n                >\n                  Add\n                </button>\n              </div>\n            </div>\n          </div>\n\n          {/* Add Repository Section */}\n          <div className=\"mb-8 p-6 bg-gray-700 rounded-lg shadow-inner\">\n            <h2 className=\"text-2xl font-bold mb-4 text-pink-300\">Manage Repositories</h2>\n            <div className=\"flex gap-2 mb-4\">\n              <input\n                  type=\"text\"\n                  className=\"flex-grow p-3 rounded-md bg-gray-900 border border-gray-600 focus:border-purple-500 focus:ring focus:ring-purple-500 focus:ring-opacity-50 text-white\"\n                  value={newRepo}\n                  onChange={(e) => setNewRepo(e.target.value)}\n                  placeholder=\"Add new repo (e.g., PrinterLogic/snmp-custom-data)\"\n                  onKeyPress={(e) => {\n                    if (e.key === 'Enter') {\n                      handleAddRepo();\n                    }\n                  }}\n              />\n              <button\n                  onClick={handleAddRepo}\n                  className=\"px-5 py-3 bg-green-600 hover:bg-green-700 text-white font-bold rounded-md shadow-lg transition duration-300 ease-in-out transform hover:scale-105\"\n              >\n                Add Repo\n              </button>\n            </div>\n            <div className=\"flex flex-wrap gap-2\">\n              {repos.map((repo) => (\n                  <span key={repo} className=\"flex items-center bg-gray-600 text-white text-sm px-3 py-1 rounded-full shadow-md\">\n                                {repo}\n                    <button\n                        onClick={() => handleRemoveRepo(repo)}\n                        className=\"ml-2 text-gray-300 hover:text-white focus:outline-none\"\n                    >\n                                    &times;\n                                </button>\n                            </span>\n              ))}\n            </div>\n          </div>\n\n          {/* Action Buttons */}\n          <div className=\"flex justify-center gap-4 mb-8\">\n            <button\n                onClick={fetchAllRepoData}\n                disabled={loading || !githubToken || repos.length === 0}\n                className={`px-8 py-4 bg-blue-600 hover:bg-blue-700 text-white font-bold rounded-full shadow-xl transition duration-300 ease-in-out transform hover:scale-105 ${loading ? 'opacity-50 cursor-not-allowed' : ''}`}\n            >\n              {loading ? 'Refreshing...' : 'Refresh All Statuses'}\n            </button>\n            <button\n                onClick={() => {\n                  setRepos([]);\n                  setRepoData({});\n                  setError('');\n                }}\n                className=\"px-8 py-4 bg-red-600 hover:bg-red-700 text-white font-bold rounded-full shadow-xl transition duration-300 ease-in-out transform hover:scale-105\"\n            >\n              Clear All Repos\n            </button>\n          </div>\n\n          {/* Error Display */}\n          {error && (\n              <div className=\"bg-red-800 text-white p-4 rounded-lg mb-8 shadow-md\">\n                <p className=\"font-bold\">Error:</p>\n                <p>{error}</p>\n              </div>\n          )}\n\n          {/* Dashboard Display */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 gap-4\">\n            {repos.length === 0 && !loading && !error && (\n                <p className=\"col-span-full text-center text-gray-400 text-xl\">\n                  Add some repositories to start monitoring!\n                </p>\n            )}\n\n            {repos.map((repoFullName) => {\n              const data = repoData[repoFullName];\n              // const [owner, repoName] = repoFullName.split('/'); // owner and repoName are not directly used in rendering repo card title\n\n              return (\n                  <div key={repoFullName} className=\"bg-gray-700 rounded-xl shadow-lg p-6 border border-gray-600 hover:border-purple-500 transition duration-200 ease-in-out transform hover:scale-[1.02]\">\n                    <h3 className=\"text-2xl font-bold mb-4 text-purple-400 flex items-center justify-between\">\n                      <a\n                          href={`https://github.com/${repoFullName}`}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          className=\"hover:underline\"\n                      >\n                        {repoFullName}\n                      </a>\n                    </h3>\n\n                    {/* Deployment Statuses */}\n                    <div className=\"mb-4\">\n                      <h4 className=\"text-lg font-semibold text-pink-200 mb-2\">Deployments:</h4>\n                      {data?.deployments && Object.keys(data.deployments).length > 0 ? (\n                          Object.entries(data.deployments).map(([env, deploymentInfo]) => {\n                            // Add console log here\n                            console.log('Deployment Info for', env, ':', deploymentInfo);\n                            return (\n                                <div key={env} className=\"flex items-center mb-1\">\n                                  <span className=\"font-medium text-gray-300 w-24 capitalize\">{env}:</span>\n                                  {deploymentInfo?.latest ? (\n                                      <a\n                                          href={deploymentInfo.latest.url.replace('/statuses', '')} // Link to the deployment itself\n                                          target=\"_blank\"\n                                          rel=\"noopener noreferrer\"\n                                          className={`px-3 py-1 rounded-full text-sm font-bold text-white ${getStatusColor(deploymentInfo.latest.status)} mr-2 hover:opacity-80`} // Reverted to getStatusColor\n                                      >\n                                        {deploymentInfo.latest.status || 'N/A'}\n                                      </a>\n                                  ) : (\n                                      <span className=\"px-3 py-1 rounded-full text-sm font-bold text-white bg-gray-500 mr-2\">\n                                                            No Deployments\n                                                        </span>\n                                  )}\n\n                                  <span className={`text-xs ${getTimestampColor(deploymentInfo?.latest?.timestamp)}`}>\n                                                        {deploymentInfo?.latest ? formatDate(deploymentInfo.latest.timestamp) : ''}\n                                                    </span>\n                                </div>\n                            );\n                          })\n                      ) : (\n                          <p className=\"text-gray-400 text-sm\">No deployment data available or environments configured.</p>\n                      )}\n                    </div>\n\n                    {/* Trivy Scan Status - Last 5 Runs with Findings */}\n                    <div>\n                      <h4 className=\"text-lg font-semibold text-pink-200 mb-2\">Trivy Scan (Last 5 Runs):</h4>\n                      {data?.trivyScans && data.trivyScans.length > 0 ? (\n                          <div className=\"space-y-1\">\n                            {data.trivyScans.map((run, index) => (\n                                <div key={run.id || index} className=\"flex flex-col mb-2 p-2 bg-gray-600 rounded-md\">\n                                  <div className=\"flex items-center text-sm mb-1\">\n                                    <span className=\"font-medium text-gray-300 w-16\">Run {index + 1}:</span>\n                                    <a\n                                        href={run.url}\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                        className={`px-2 py-0.5 rounded-full text-xs font-bold text-white ${getConclusionColor(run.conclusion)} mr-2 hover:opacity-80`}\n                                    >\n                                      {run.conclusion || 'N/A'}\n                                    </a>\n                                    <span className=\"text-xs text-gray-400\">\n                                                            {formatDate(run.timestamp)}\n                                                        </span>\n                                  </div>\n                                  {run.vulnerabilitySummary && (\n                                      <p className={`text-xs ml-16 ${shouldHighlightTrivySummary(run) ? 'text-yellow-400' : 'text-gray-300'}`}>\n                                        {run.vulnerabilitySummary}\n                                      </p>\n                                  )}\n                                  {!run.vulnerabilitySummary && run.conclusion !== 'error' && (\n                                      <p className=\"text-xs text-gray-400 ml-16\">\n                                        Summary not found in logs.\n                                      </p>\n                                  )}\n                                </div>\n                            ))}\n                          </div>\n                      ) : (\n                          <p className=\"text-gray-400 text-sm\">No Trivy scan runs found or workflow not configured.</p>\n                      )}\n                    </div>\n                    {data?.error && (\n                        <div className=\"mt-4 text-red-400 text-sm\">\n                          Error: {data.error}\n                        </div>\n                    )}\n                  </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}