{"ast":null,"code":"import _objectSpread from\"/Users/nicholas.ball/Documents/GitHub/gha-dash/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useCallback}from'react';// Main App component for the GitHub Dashboard\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){// State for GitHub Personal Access Token (PAT)\nconst[githubToken,setGithubToken]=useState('');// State to store the list of repositories (e.g., \"owner/repo\")\nconst[repos,setRepos]=useState(()=>{// Initialize repos from local storage, or an empty array if not found\nconst savedRepos=localStorage.getItem('githubRepos');return savedRepos?JSON.parse(savedRepos):[];});localStorage.setItem('githubRepos',JSON.stringify(['printerlogic/snmp-custom-data','printerlogic/api-gateway-app','printerlogic/print-stats-api','printerlogic/print-stats-worker','printerlogic/event-bus-app','printerlogic/service-client-status-service-api','printerlogic/quota-management-app','printerlogic/jobba-the-held-app','printerlogic/heir-of-fangorn','printerlogic/printer-admin-gw','printerlogic/printer-api','printerlogic/badge-reader-api','printerlogic/docker-images-ops','printerlogic/unleash']));// State to store the fetched data for each repository\nconst[repoData,setRepoData]=useState({});// State for loading indicator\nconst[loading,setLoading]=useState(false);// State for any error messages\nconst[error,setError]=useState('');// State for new repository input\nconst[newRepo,setNewRepo]=useState('');// State for the Trivy workflow file name\nconst[trivyWorkflowFileName,setTrivyWorkflowFileName]=useState(()=>{// Initialize workflow file name from local storage, or a default value\nconst savedWorkflowName=localStorage.getItem('trivyWorkflowFileName');return savedWorkflowName||'trivy-scan.yml';// Default Trivy workflow file name\n});// State for deployment environments to monitor\nconst[deploymentEnvironments,setDeploymentEnvironments]=useState(()=>{// Initialize environments from local storage, or a default value\nconst savedEnvironments=localStorage.getItem('deploymentEnvironments');return savedEnvironments?JSON.parse(savedEnvironments):['service-stack','stage','canary','prod'];});// State for new environment input\nconst[newEnvironment,setNewEnvironment]=useState('');// Effect to load GitHub token from local storage on initial render\nuseEffect(()=>{const savedToken=localStorage.getItem('githubToken');if(savedToken){setGithubToken(savedToken);}},[]);// Effect to save repos, token, workflow name, and environments to local storage whenever they change\nuseEffect(()=>{localStorage.setItem('githubRepos',JSON.stringify(repos));},[repos]);useEffect(()=>{localStorage.setItem('githubToken',githubToken);},[githubToken]);useEffect(()=>{localStorage.setItem('trivyWorkflowFileName',trivyWorkflowFileName);},[trivyWorkflowFileName]);useEffect(()=>{localStorage.setItem('deploymentEnvironments',JSON.stringify(deploymentEnvironments));},[deploymentEnvironments]);// Helper to get standard status color for deployments (e.g., for non-success states)\nconst getStatusColor=useCallback(status=>{switch(status){case'success':return'bg-green-500';case'failure':case'error':return'bg-red-500';case'pending':case'in_progress':return'bg-yellow-500';case'inactive':case'cancelled':return'bg-gray-400';default:return'bg-blue-400';// For unknown or neutral states\n}},[]);// Helper to get color for the timestamp text based on deployment age\nconst getTimestampColor=useCallback(deploymentTimestamp=>{if(!deploymentTimestamp){return'text-gray-400';// Default gray for N/A or invalid dates\n}const now=new Date();const deployDate=new Date(deploymentTimestamp);const diffInMilliseconds=now.getTime()-deployDate.getTime();const diffInWeeks=diffInMilliseconds/(1000*60*60*24*7);if(diffInWeeks<2){// Less than 2 weeks\nreturn'text-green-400';}else if(diffInWeeks>=2&&diffInWeeks<4){// 2 weeks to less than 4 weeks\nreturn'text-yellow-400';}else if(diffInWeeks>=4){// 4 weeks or more\nreturn'text-red-400';}else{return'text-gray-400';// Fallback\n}},[]);// Function to fetch deployment information, including the latest status and last successful timestamp\nconst getDeploymentInfo=useCallback(async(owner,repo,environment)=>{// Fetch up to 100 deployments to find the most recent successful one\nconst url=\"https://api.github.com/repos/\".concat(owner,\"/\").concat(repo,\"/deployments?environment=\").concat(environment,\"&per_page=100\");try{const response=await fetch(url,{headers:{Authorization:\"Bearer \".concat(githubToken),Accept:'application/vnd.github.v3+json'}});if(!response.ok){const errorText=await response.text();throw new Error(\"GitHub API error for deployment (\".concat(response.status,\"): \").concat(errorText));}const deployments=await response.json();let latestDeploymentInfo=null;let lastSuccessfulDeploymentTimestamp=null;if(deployments.length>0){const latestDeployment=deployments[0];// Fetch the statuses for the latest deployment to get its actual current state\nconst statusesUrl=latestDeployment.statuses_url;const statusesResponse=await fetch(statusesUrl,{headers:{Authorization:\"Bearer \".concat(githubToken),Accept:'application/vnd.github.v3+json'}});if(!statusesResponse.ok){const errorText=await statusesResponse.text();throw new Error(\"GitHub API error for deployment statuses (\".concat(statusesResponse.status,\"): \").concat(errorText));}const statuses=await statusesResponse.json();if(statuses.length>0){// Sort statuses by creation date to get the latest one\nconst actualLatestStatus=statuses.sort((a,b)=>new Date(b.created_at)-new Date(a.created_at))[0];latestDeploymentInfo={status:actualLatestStatus.state,// Use the state from the actual latest status\ntimestamp:actualLatestStatus.created_at,url:actualLatestStatus.url};}else{// Fallback if no statuses found for the latest deployment\nlatestDeploymentInfo={status:latestDeployment.state,// Use the deployment object's state as a fallback\ntimestamp:latestDeployment.created_at,url:latestDeployment.url};}// Find the most recent successful deployment for the timestamp coloring\nfor(const dep of deployments){if(dep.state==='success'){// This state is usually 'active' for successful deployments\n// We need to check its *statuses* to confirm 'success'\nconst depStatusesUrl=dep.statuses_url;const depStatusesResponse=await fetch(depStatusesUrl,{headers:{Authorization:\"Bearer \".concat(githubToken),Accept:'application/vnd.github.v3+json'}});if(depStatusesResponse.ok){const depStatuses=await depStatusesResponse.json();const successStatus=depStatuses.find(s=>s.state==='success');if(successStatus){lastSuccessfulDeploymentTimestamp=successStatus.created_at;break;// Found the most recent successful one\n}}}}}return{latest:latestDeploymentInfo,lastSuccessTimestamp:lastSuccessfulDeploymentTimestamp};}catch(err){console.error(\"Error fetching deployment info for \".concat(owner,\"/\").concat(repo,\" (\").concat(environment,\"):\"),err);return{latest:{status:'error',timestamp:new Date().toISOString(),url:'#'},lastSuccessTimestamp:null};}},[githubToken]);// Function to fetch the latest workflow run conclusion for a given repo and workflow name\n// This function is updated to also fetch and parse logs for vulnerability summaries\nconst getLatestWorkflowRuns=useCallback(async function(owner,repo,workflowName){let count=arguments.length>3&&arguments[3]!==undefined?arguments[3]:5;const url=\"https://api.github.com/repos/\".concat(owner,\"/\").concat(repo,\"/actions/runs?workflow_id=\").concat(workflowName,\"&per_page=\").concat(count);try{const response=await fetch(url,{headers:{Authorization:\"Bearer \".concat(githubToken),Accept:'application/vnd.github.v3+json'}});if(!response.ok){const errorText=await response.text();throw new Error(\"GitHub API error for workflow runs (\".concat(response.status,\"): \").concat(errorText));}const data=await response.json();if(data.workflow_runs&&data.workflow_runs.length>0){// Use Promise.all to fetch details for all runs concurrently\nconst runsWithDetails=await Promise.all(data.workflow_runs.map(async run=>{let vulnerabilitySummary=null;try{// Fetch jobs for the current run\nconst jobsUrl=\"https://api.github.com/repos/\".concat(owner,\"/\").concat(repo,\"/actions/runs/\").concat(run.id,\"/jobs\");const jobsResponse=await fetch(jobsUrl,{headers:{Authorization:\"Bearer \".concat(githubToken),Accept:'application/vnd.github.v3+json'}});if(!jobsResponse.ok){const errorText=await jobsResponse.text();throw new Error(\"GitHub API error for jobs (\".concat(jobsResponse.status,\"): \").concat(errorText));}const jobsData=await jobsResponse.json();// Find a job that likely contains Trivy scan output (heuristic: name includes 'trivy' or 'scan')\nconst trivyJob=jobsData.jobs.find(job=>job.name.toLowerCase().includes('trivy')||job.name.toLowerCase().includes('scan'));if(trivyJob){// Fetch logs for the identified Trivy job\nconst logsUrl=\"https://api.github.com/repos/\".concat(owner,\"/\").concat(repo,\"/actions/jobs/\").concat(trivyJob.id,\"/logs\");const logsResponse=await fetch(logsUrl,{headers:{Authorization:\"Bearer \".concat(githubToken),Accept:'application/vnd.github.v3+json'// Logs are typically plain text but this header works\n}});if(!logsResponse.ok){const errorText=await logsResponse.text();throw new Error(\"GitHub API error for job logs (\".concat(logsResponse.status,\"): \").concat(errorText));}const logsText=await logsResponse.text();// Get logs as plain text\n// Regex to find the vulnerability summary line, similar to: \"Total: 1 (LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)\"\nconst regex=/Total: \\d+ \\(LOW: (\\d+), MEDIUM: (\\d+), HIGH: (\\d+), CRITICAL: (\\d+)\\)/;const match=logsText.match(regex);if(match){vulnerabilitySummary=match[0];// Store individual counts for highlighting logic\nrun.lowCount=parseInt(match[1]);run.mediumCount=parseInt(match[2]);run.highCount=parseInt(match[3]);run.criticalCount=parseInt(match[4]);}}}catch(jobErr){console.warn(\"Could not fetch job/log details for run \".concat(run.id,\" in \").concat(owner,\"/\").concat(repo,\":\"),jobErr);vulnerabilitySummary='Error fetching details';}return{conclusion:run.conclusion,timestamp:run.created_at,url:run.html_url,id:run.id,// Ensure ID is present for unique keys in lists\nvulnerabilitySummary:vulnerabilitySummary,lowCount:run.lowCount||0,// Ensure default 0 if not found\nmediumCount:run.mediumCount||0,highCount:run.highCount||0,criticalCount:run.criticalCount||0};}));return runsWithDetails;}}catch(err){console.error(\"Error fetching workflow runs for \".concat(owner,\"/\").concat(repo,\" (\").concat(workflowName,\"):\"),err);return[];}return[];},[githubToken]);// Recreate if githubToken changes\n// Function to fetch all data for all monitored repositories\nconst fetchAllRepoData=useCallback(async()=>{if(!githubToken){setError('Please enter your GitHub Personal Access Token.');setRepoData({});return;}setLoading(true);setError('');const newRepoData={};for(const repoFullName of repos){const[owner,repo]=repoFullName.split('/');if(!owner||!repo){newRepoData[repoFullName]={error:'Invalid repository format'};continue;}const deployments={};for(const env of deploymentEnvironments){deployments[env]=await getDeploymentInfo(owner,repo,env);// Use getDeploymentInfo\n}// Fetch multiple Trivy scan runs with their details\nconst trivyScans=await getLatestWorkflowRuns(owner,repo,trivyWorkflowFileName);newRepoData[repoFullName]={deployments,trivyScans};}setRepoData(newRepoData);setLoading(false);},[githubToken,repos,trivyWorkflowFileName,deploymentEnvironments,getDeploymentInfo,getLatestWorkflowRuns]);// Recreate if these dependencies change\n// Effect to fetch data when repos or token changes\nuseEffect(()=>{fetchAllRepoData();},[fetchAllRepoData]);// Handler for adding a new repository\nconst handleAddRepo=()=>{const trimmedRepo=newRepo.trim();if(trimmedRepo&&!repos.includes(trimmedRepo)){setRepos([...repos,trimmedRepo]);setNewRepo('');}};// Handler for removing a repository\nconst handleRemoveRepo=repoToRemove=>{setRepos(repos.filter(repo=>repo!==repoToRemove));setRepoData(prevData=>{const newData=_objectSpread({},prevData);delete newData[repoToRemove];return newData;});};// Handler for adding a new environment\nconst handleAddEnvironment=()=>{const trimmedEnv=newEnvironment.trim().toLowerCase();if(trimmedEnv&&!deploymentEnvironments.includes(trimmedEnv)){setDeploymentEnvironments([...deploymentEnvironments,trimmedEnv]);setNewEnvironment('');}};// Handler for removing an environment\nconst handleRemoveEnvironment=envToRemove=>{setDeploymentEnvironments(deploymentEnvironments.filter(env=>env!==envToRemove));};// Helper to format date\nconst formatDate=isoString=>{if(!isoString||isoString==='#')return'N/A';try{return new Date(isoString).toLocaleString();}catch(e){return'Invalid Date';}};// Helper to get color for workflow run conclusions\nconst getConclusionColor=conclusion=>{switch(conclusion){case'success':return'bg-green-500';case'failure':return'bg-red-500';case'neutral':return'bg-gray-500';case'cancelled':return'bg-yellow-500';case'skipped':return'bg-indigo-500';case'timed_out':return'bg-orange-500';case'action_required':return'bg-purple-500';default:return'bg-blue-400';}};// Helper to determine if Trivy summary should be highlighted\nconst shouldHighlightTrivySummary=run=>{return run.lowCount>0||run.mediumCount>0||run.highCount>0||run.criticalCount>0;};return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-gradient-to-br from-gray-900 to-black text-gray-100 p-4 font-inter\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container mx-auto p-6 bg-gray-800 rounded-xl shadow-2xl\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-4xl font-extrabold text-center mb-8 text-transparent bg-clip-text bg-gradient-to-r from-purple-400 to-pink-600\",children:\"GitHub Repo Status Dashboard\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-8 p-6 bg-gray-700 rounded-lg shadow-inner\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"githubToken\",className:\"block text-lg font-semibold mb-2 text-purple-300\",children:\"GitHub Personal Access Token (PAT):\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"githubToken\",className:\"w-full p-3 rounded-md bg-gray-900 border border-gray-600 focus:border-purple-500 focus:ring focus:ring-purple-500 focus:ring-opacity-50 text-white\",value:githubToken,onChange:e=>setGithubToken(e.target.value),placeholder:\"Enter your GitHub PAT (e.g., gh_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx)\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-400 mt-2\",children:\"Your PAT is stored locally in your browser. It needs 'repo' (or 'repo:status') and 'actions:read' scopes.\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-8 p-6 bg-gray-700 rounded-lg shadow-inner\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold mb-4 text-pink-300\",children:\"Configuration\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"trivyWorkflow\",className:\"block text-lg font-semibold mb-2 text-purple-300\",children:\"Trivy Workflow File Name:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"trivyWorkflow\",className:\"w-full p-3 rounded-md bg-gray-900 border border-gray-600 focus:border-purple-500 focus:ring focus:ring-purple-500 focus:ring-opacity-50 text-white\",value:trivyWorkflowFileName,onChange:e=>setTrivyWorkflowFileName(e.target.value),placeholder:\"e.g., trivy-scan.yml\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-400 mt-2\",children:\"The exact filename of your Trivy GitHub Actions workflow (e.g., `trivy-scan.yml`).\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-lg font-semibold mb-2 text-purple-300\",children:\"Deployment Environments to Monitor:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap gap-2 mb-2\",children:deploymentEnvironments.map(env=>/*#__PURE__*/_jsxs(\"span\",{className:\"flex items-center bg-purple-600 text-white text-sm px-3 py-1 rounded-full shadow-md\",children:[env,/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleRemoveEnvironment(env),className:\"ml-2 text-purple-200 hover:text-white focus:outline-none\",children:\"\\xD7\"})]},env))}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-2\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"flex-grow p-3 rounded-md bg-gray-900 border border-gray-600 focus:border-purple-500 focus:ring focus:ring-purple-500 focus:ring-opacity-50 text-white\",value:newEnvironment,onChange:e=>setNewEnvironment(e.target.value),placeholder:\"Add new environment (e.g., dev)\",onKeyPress:e=>{if(e.key==='Enter'){handleAddEnvironment();}}}),/*#__PURE__*/_jsx(\"button\",{onClick:handleAddEnvironment,className:\"px-5 py-3 bg-purple-700 hover:bg-purple-800 text-white font-bold rounded-md shadow-lg transition duration-300 ease-in-out transform hover:scale-105\",children:\"Add\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-8 p-6 bg-gray-700 rounded-lg shadow-inner\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold mb-4 text-pink-300\",children:\"Manage Repositories\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-2 mb-4\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"flex-grow p-3 rounded-md bg-gray-900 border border-gray-600 focus:border-purple-500 focus:ring focus:ring-purple-500 focus:ring-opacity-50 text-white\",value:newRepo,onChange:e=>setNewRepo(e.target.value),placeholder:\"Add new repo (e.g., PrinterLogic/snmp-custom-data)\",onKeyPress:e=>{if(e.key==='Enter'){handleAddRepo();}}}),/*#__PURE__*/_jsx(\"button\",{onClick:handleAddRepo,className:\"px-5 py-3 bg-green-600 hover:bg-green-700 text-white font-bold rounded-md shadow-lg transition duration-300 ease-in-out transform hover:scale-105\",children:\"Add Repo\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"flex flex-wrap gap-2\",children:repos.map(repo=>/*#__PURE__*/_jsxs(\"span\",{className:\"flex items-center bg-gray-600 text-white text-sm px-3 py-1 rounded-full shadow-md\",children:[repo,/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleRemoveRepo(repo),className:\"ml-2 text-gray-300 hover:text-white focus:outline-none\",children:\"\\xD7\"})]},repo))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-center gap-4 mb-8\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:fetchAllRepoData,disabled:loading||!githubToken||repos.length===0,className:\"px-8 py-4 bg-blue-600 hover:bg-blue-700 text-white font-bold rounded-full shadow-xl transition duration-300 ease-in-out transform hover:scale-105 \".concat(loading?'opacity-50 cursor-not-allowed':''),children:loading?'Refreshing...':'Refresh All Statuses'}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setRepos([]);setRepoData({});setError('');},className:\"px-8 py-4 bg-red-600 hover:bg-red-700 text-white font-bold rounded-full shadow-xl transition duration-300 ease-in-out transform hover:scale-105\",children:\"Clear All Repos\"})]}),error&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-red-800 text-white p-4 rounded-lg mb-8 shadow-md\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"font-bold\",children:\"Error:\"}),/*#__PURE__*/_jsx(\"p\",{children:error})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 gap-4\",children:[repos.length===0&&!loading&&!error&&/*#__PURE__*/_jsx(\"p\",{className:\"col-span-full text-center text-gray-400 text-xl\",children:\"Add some repositories to start monitoring!\"}),repos.map(repoFullName=>{const data=repoData[repoFullName];// const [owner, repoName] = repoFullName.split('/'); // owner and repoName are not directly used in rendering repo card title\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-700 rounded-xl shadow-lg p-6 border border-gray-600 hover:border-purple-500 transition duration-200 ease-in-out transform hover:scale-[1.02]\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-2xl font-bold mb-4 text-purple-400 flex items-center justify-between\",children:/*#__PURE__*/_jsx(\"a\",{href:\"https://github.com/\".concat(repoFullName),target:\"_blank\",rel:\"noopener noreferrer\",className:\"hover:underline\",children:repoFullName})}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-lg font-semibold text-pink-200 mb-2\",children:\"Deployments:\"}),data!==null&&data!==void 0&&data.deployments&&Object.keys(data.deployments).length>0?Object.entries(data.deployments).map(_ref=>{var _deploymentInfo$lates;let[env,deploymentInfo]=_ref;// Add console log here\nconsole.log('Deployment Info for',env,':',deploymentInfo);return/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center mb-1\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"font-medium text-gray-300 w-24 capitalize\",children:[env,\":\"]}),deploymentInfo!==null&&deploymentInfo!==void 0&&deploymentInfo.latest?/*#__PURE__*/_jsx(\"a\",{href:deploymentInfo.latest.url.replace('/statuses','')// Link to the deployment itself\n,target:\"_blank\",rel:\"noopener noreferrer\",className:\"px-3 py-1 rounded-full text-sm font-bold text-white \".concat(getStatusColor(deploymentInfo.latest.status),\" mr-2 hover:opacity-80\")// Reverted to getStatusColor\n,children:deploymentInfo.latest.status||'N/A'}):/*#__PURE__*/_jsx(\"span\",{className:\"px-3 py-1 rounded-full text-sm font-bold text-white bg-gray-500 mr-2\",children:\"No Deployments\"}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs \".concat(getTimestampColor(deploymentInfo===null||deploymentInfo===void 0?void 0:(_deploymentInfo$lates=deploymentInfo.latest)===null||_deploymentInfo$lates===void 0?void 0:_deploymentInfo$lates.timestamp)),children:deploymentInfo!==null&&deploymentInfo!==void 0&&deploymentInfo.latest?formatDate(deploymentInfo.latest.timestamp):''})]},env);}):/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-400 text-sm\",children:\"No deployment data available or environments configured.\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-lg font-semibold text-pink-200 mb-2\",children:\"Trivy Scan (Last 5 Runs):\"}),data!==null&&data!==void 0&&data.trivyScans&&data.trivyScans.length>0?/*#__PURE__*/_jsx(\"div\",{className:\"space-y-1\",children:data.trivyScans.map((run,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col mb-2 p-2 bg-gray-600 rounded-md\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center text-sm mb-1\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"font-medium text-gray-300 w-16\",children:[\"Run \",index+1,\":\"]}),/*#__PURE__*/_jsx(\"a\",{href:run.url,target:\"_blank\",rel:\"noopener noreferrer\",className:\"px-2 py-0.5 rounded-full text-xs font-bold text-white \".concat(getConclusionColor(run.conclusion),\" mr-2 hover:opacity-80\"),children:run.conclusion||'N/A'}),/*#__PURE__*/_jsx(\"span\",{className:\"text-xs text-gray-400\",children:formatDate(run.timestamp)})]}),run.vulnerabilitySummary&&/*#__PURE__*/_jsx(\"p\",{className:\"text-xs ml-16 \".concat(shouldHighlightTrivySummary(run)?'text-yellow-400':'text-gray-300'),children:run.vulnerabilitySummary}),!run.vulnerabilitySummary&&run.conclusion!=='error'&&/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-400 ml-16\",children:\"Summary not found in logs.\"})]},run.id||index))}):/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-400 text-sm\",children:\"No Trivy scan runs found or workflow not configured.\"})]}),(data===null||data===void 0?void 0:data.error)&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 text-red-400 text-sm\",children:[\"Error: \",data.error]})]},repoFullName);})]})]})});}export default App;","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsx","_jsx","jsxs","_jsxs","App","githubToken","setGithubToken","repos","setRepos","savedRepos","localStorage","getItem","JSON","parse","setItem","stringify","repoData","setRepoData","loading","setLoading","error","setError","newRepo","setNewRepo","trivyWorkflowFileName","setTrivyWorkflowFileName","savedWorkflowName","deploymentEnvironments","setDeploymentEnvironments","savedEnvironments","newEnvironment","setNewEnvironment","savedToken","getStatusColor","status","getTimestampColor","deploymentTimestamp","now","Date","deployDate","diffInMilliseconds","getTime","diffInWeeks","getDeploymentInfo","owner","repo","environment","url","concat","response","fetch","headers","Authorization","Accept","ok","errorText","text","Error","deployments","json","latestDeploymentInfo","lastSuccessfulDeploymentTimestamp","length","latestDeployment","statusesUrl","statuses_url","statusesResponse","statuses","actualLatestStatus","sort","a","b","created_at","state","timestamp","dep","depStatusesUrl","depStatusesResponse","depStatuses","successStatus","find","s","latest","lastSuccessTimestamp","err","console","toISOString","getLatestWorkflowRuns","workflowName","count","arguments","undefined","data","workflow_runs","runsWithDetails","Promise","all","map","run","vulnerabilitySummary","jobsUrl","id","jobsResponse","jobsData","trivyJob","jobs","job","name","toLowerCase","includes","logsUrl","logsResponse","logsText","regex","match","lowCount","parseInt","mediumCount","highCount","criticalCount","jobErr","warn","conclusion","html_url","fetchAllRepoData","newRepoData","repoFullName","split","env","trivyScans","handleAddRepo","trimmedRepo","trim","handleRemoveRepo","repoToRemove","filter","prevData","newData","_objectSpread","handleAddEnvironment","trimmedEnv","handleRemoveEnvironment","envToRemove","formatDate","isoString","toLocaleString","e","getConclusionColor","shouldHighlightTrivySummary","className","children","htmlFor","type","value","onChange","target","placeholder","onClick","onKeyPress","key","disabled","href","rel","Object","keys","entries","_ref","_deploymentInfo$lates","deploymentInfo","log","replace","index"],"sources":["/Users/nicholas.ball/Documents/GitHub/gha-dash/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\n// Main App component for the GitHub Dashboard\nfunction App() {\n  // State for GitHub Personal Access Token (PAT)\n  const [githubToken, setGithubToken] = useState('');\n  // State to store the list of repositories (e.g., \"owner/repo\")\n  const [repos, setRepos] = useState(() => {\n    // Initialize repos from local storage, or an empty array if not found\n    const savedRepos = localStorage.getItem('githubRepos');\n    return savedRepos ? JSON.parse(savedRepos) : [];\n  });\n  localStorage.setItem('githubRepos', JSON.stringify([\n    'printerlogic/snmp-custom-data',\n    'printerlogic/api-gateway-app',\n    'printerlogic/print-stats-api',\n    'printerlogic/print-stats-worker',\n    'printerlogic/event-bus-app',\n    'printerlogic/service-client-status-service-api',\n    'printerlogic/quota-management-app',\n    'printerlogic/jobba-the-held-app',\n    'printerlogic/heir-of-fangorn',\n    'printerlogic/printer-admin-gw',\n    'printerlogic/printer-api',\n    'printerlogic/badge-reader-api',\n    'printerlogic/docker-images-ops',\n    'printerlogic/unleash',\n  ]));\n  // State to store the fetched data for each repository\n  const [repoData, setRepoData] = useState({});\n  // State for loading indicator\n  const [loading, setLoading] = useState(false);\n  // State for any error messages\n  const [error, setError] = useState('');\n  // State for new repository input\n  const [newRepo, setNewRepo] = useState('');\n  // State for the Trivy workflow file name\n  const [trivyWorkflowFileName, setTrivyWorkflowFileName] = useState(() => {\n    // Initialize workflow file name from local storage, or a default value\n    const savedWorkflowName = localStorage.getItem('trivyWorkflowFileName');\n    return savedWorkflowName || 'trivy-scan.yml'; // Default Trivy workflow file name\n  });\n  // State for deployment environments to monitor\n  const [deploymentEnvironments, setDeploymentEnvironments] = useState(() => {\n    // Initialize environments from local storage, or a default value\n    const savedEnvironments = localStorage.getItem('deploymentEnvironments');\n    return savedEnvironments ? JSON.parse(savedEnvironments) : ['service-stack', 'stage', 'canary', 'prod'];\n  });\n  // State for new environment input\n  const [newEnvironment, setNewEnvironment] = useState('');\n\n\n  // Effect to load GitHub token from local storage on initial render\n  useEffect(() => {\n    const savedToken = localStorage.getItem('githubToken');\n    if (savedToken) {\n      setGithubToken(savedToken);\n    }\n  }, []);\n\n  // Effect to save repos, token, workflow name, and environments to local storage whenever they change\n  useEffect(() => {\n    localStorage.setItem('githubRepos', JSON.stringify(repos));\n  }, [repos]);\n\n  useEffect(() => {\n    localStorage.setItem('githubToken', githubToken);\n  }, [githubToken]);\n\n  useEffect(() => {\n    localStorage.setItem('trivyWorkflowFileName', trivyWorkflowFileName);\n  }, [trivyWorkflowFileName]);\n\n  useEffect(() => {\n    localStorage.setItem('deploymentEnvironments', JSON.stringify(deploymentEnvironments));\n  }, [deploymentEnvironments]);\n\n\n  // Helper to get standard status color for deployments (e.g., for non-success states)\n  const getStatusColor = useCallback((status) => {\n    switch (status) {\n      case 'success':\n        return 'bg-green-500';\n      case 'failure':\n      case 'error':\n        return 'bg-red-500';\n      case 'pending':\n      case 'in_progress':\n        return 'bg-yellow-500';\n      case 'inactive':\n      case 'cancelled':\n        return 'bg-gray-400';\n      default:\n        return 'bg-blue-400'; // For unknown or neutral states\n    }\n  }, []);\n\n  // Helper to get color for the timestamp text based on deployment age\n  const getTimestampColor = useCallback((deploymentTimestamp) => {\n    if (!deploymentTimestamp) {\n      return 'text-gray-400'; // Default gray for N/A or invalid dates\n    }\n\n    const now = new Date();\n    const deployDate = new Date(deploymentTimestamp);\n    const diffInMilliseconds = now.getTime() - deployDate.getTime();\n    const diffInWeeks = diffInMilliseconds / (1000 * 60 * 60 * 24 * 7);\n\n    if (diffInWeeks < 2) { // Less than 2 weeks\n      return 'text-green-400';\n    } else if (diffInWeeks >= 2 && diffInWeeks < 4) { // 2 weeks to less than 4 weeks\n      return 'text-yellow-400';\n    } else if (diffInWeeks >= 4) { // 4 weeks or more\n      return 'text-red-400';\n    } else {\n      return 'text-gray-400'; // Fallback\n    }\n  }, []);\n\n\n  // Function to fetch deployment information, including the latest status and last successful timestamp\n  const getDeploymentInfo = useCallback(async (owner, repo, environment) => {\n    // Fetch up to 100 deployments to find the most recent successful one\n    const url = `https://api.github.com/repos/${owner}/${repo}/deployments?environment=${environment}&per_page=100`;\n    try {\n      const response = await fetch(url, {\n        headers: {\n          Authorization: `Bearer ${githubToken}`,\n          Accept: 'application/vnd.github.v3+json',\n        },\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`GitHub API error for deployment (${response.status}): ${errorText}`);\n      }\n      const deployments = await response.json();\n\n      let latestDeploymentInfo = null;\n      let lastSuccessfulDeploymentTimestamp = null;\n\n      if (deployments.length > 0) {\n        const latestDeployment = deployments[0];\n\n        // Fetch the statuses for the latest deployment to get its actual current state\n        const statusesUrl = latestDeployment.statuses_url;\n        const statusesResponse = await fetch(statusesUrl, {\n          headers: {\n            Authorization: `Bearer ${githubToken}`,\n            Accept: 'application/vnd.github.v3+json',\n          },\n        });\n        if (!statusesResponse.ok) {\n          const errorText = await statusesResponse.text();\n          throw new Error(`GitHub API error for deployment statuses (${statusesResponse.status}): ${errorText}`);\n        }\n        const statuses = await statusesResponse.json();\n\n        if (statuses.length > 0) {\n          // Sort statuses by creation date to get the latest one\n          const actualLatestStatus = statuses.sort((a, b) => new Date(b.created_at) - new Date(a.created_at))[0];\n          latestDeploymentInfo = {\n            status: actualLatestStatus.state, // Use the state from the actual latest status\n            timestamp: actualLatestStatus.created_at,\n            url: actualLatestStatus.url,\n          };\n        } else {\n          // Fallback if no statuses found for the latest deployment\n          latestDeploymentInfo = {\n            status: latestDeployment.state, // Use the deployment object's state as a fallback\n            timestamp: latestDeployment.created_at,\n            url: latestDeployment.url,\n          };\n        }\n\n        // Find the most recent successful deployment for the timestamp coloring\n        for (const dep of deployments) {\n          if (dep.state === 'success') { // This state is usually 'active' for successful deployments\n            // We need to check its *statuses* to confirm 'success'\n            const depStatusesUrl = dep.statuses_url;\n            const depStatusesResponse = await fetch(depStatusesUrl, {\n              headers: {\n                Authorization: `Bearer ${githubToken}`,\n                Accept: 'application/vnd.github.v3+json',\n              },\n            });\n            if (depStatusesResponse.ok) {\n              const depStatuses = await depStatusesResponse.json();\n              const successStatus = depStatuses.find(s => s.state === 'success');\n              if (successStatus) {\n                lastSuccessfulDeploymentTimestamp = successStatus.created_at;\n                break; // Found the most recent successful one\n              }\n            }\n          }\n        }\n      }\n\n      return {\n        latest: latestDeploymentInfo,\n        lastSuccessTimestamp: lastSuccessfulDeploymentTimestamp,\n      };\n\n    } catch (err) {\n      console.error(`Error fetching deployment info for ${owner}/${repo} (${environment}):`, err);\n      return {\n        latest: { status: 'error', timestamp: new Date().toISOString(), url: '#' },\n        lastSuccessTimestamp: null,\n      };\n    }\n  }, [githubToken]);\n\n\n  // Function to fetch the latest workflow run conclusion for a given repo and workflow name\n  // This function is updated to also fetch and parse logs for vulnerability summaries\n  const getLatestWorkflowRuns = useCallback(async (owner, repo, workflowName, count = 5) => {\n    const url = `https://api.github.com/repos/${owner}/${repo}/actions/runs?workflow_id=${workflowName}&per_page=${count}`;\n    try {\n      const response = await fetch(url, {\n        headers: {\n          Authorization: `Bearer ${githubToken}`,\n          Accept: 'application/vnd.github.v3+json',\n        },\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`GitHub API error for workflow runs (${response.status}): ${errorText}`);\n      }\n      const data = await response.json();\n\n      if (data.workflow_runs && data.workflow_runs.length > 0) {\n        // Use Promise.all to fetch details for all runs concurrently\n        const runsWithDetails = await Promise.all(data.workflow_runs.map(async (run) => {\n          let vulnerabilitySummary = null;\n          try {\n            // Fetch jobs for the current run\n            const jobsUrl = `https://api.github.com/repos/${owner}/${repo}/actions/runs/${run.id}/jobs`;\n            const jobsResponse = await fetch(jobsUrl, {\n              headers: {\n                Authorization: `Bearer ${githubToken}`,\n                Accept: 'application/vnd.github.v3+json',\n              },\n            });\n            if (!jobsResponse.ok) {\n              const errorText = await jobsResponse.text();\n              throw new Error(`GitHub API error for jobs (${jobsResponse.status}): ${errorText}`);\n            }\n            const jobsData = await jobsResponse.json();\n            // Find a job that likely contains Trivy scan output (heuristic: name includes 'trivy' or 'scan')\n            const trivyJob = jobsData.jobs.find(job =>\n                job.name.toLowerCase().includes('trivy') ||\n                job.name.toLowerCase().includes('scan')\n            );\n\n            if (trivyJob) {\n              // Fetch logs for the identified Trivy job\n              const logsUrl = `https://api.github.com/repos/${owner}/${repo}/actions/jobs/${trivyJob.id}/logs`;\n              const logsResponse = await fetch(logsUrl, {\n                headers: {\n                  Authorization: `Bearer ${githubToken}`,\n                  Accept: 'application/vnd.github.v3+json', // Logs are typically plain text but this header works\n                },\n              });\n              if (!logsResponse.ok) {\n                const errorText = await logsResponse.text();\n                throw new Error(`GitHub API error for job logs (${logsResponse.status}): ${errorText}`);\n              }\n              const logsText = await logsResponse.text(); // Get logs as plain text\n\n              // Regex to find the vulnerability summary line, similar to: \"Total: 1 (LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)\"\n              const regex = /Total: \\d+ \\(LOW: (\\d+), MEDIUM: (\\d+), HIGH: (\\d+), CRITICAL: (\\d+)\\)/;\n              const match = logsText.match(regex);\n              if (match) {\n                vulnerabilitySummary = match[0];\n                // Store individual counts for highlighting logic\n                run.lowCount = parseInt(match[1]);\n                run.mediumCount = parseInt(match[2]);\n                run.highCount = parseInt(match[3]);\n                run.criticalCount = parseInt(match[4]);\n              }\n            }\n          } catch (jobErr) {\n            console.warn(`Could not fetch job/log details for run ${run.id} in ${owner}/${repo}:`, jobErr);\n            vulnerabilitySummary = 'Error fetching details';\n          }\n          return {\n            conclusion: run.conclusion,\n            timestamp: run.created_at,\n            url: run.html_url,\n            id: run.id, // Ensure ID is present for unique keys in lists\n            vulnerabilitySummary: vulnerabilitySummary,\n            lowCount: run.lowCount || 0, // Ensure default 0 if not found\n            mediumCount: run.mediumCount || 0,\n            highCount: run.highCount || 0,\n            criticalCount: run.criticalCount || 0,\n          };\n        }));\n        return runsWithDetails;\n      }\n    } catch (err) {\n      console.error(`Error fetching workflow runs for ${owner}/${repo} (${workflowName}):`, err);\n      return [];\n    }\n    return [];\n  }, [githubToken]); // Recreate if githubToken changes\n\n  // Function to fetch all data for all monitored repositories\n  const fetchAllRepoData = useCallback(async () => {\n    if (!githubToken) {\n      setError('Please enter your GitHub Personal Access Token.');\n      setRepoData({});\n      return;\n    }\n    setLoading(true);\n    setError('');\n    const newRepoData = {};\n\n    for (const repoFullName of repos) {\n      const [owner, repo] = repoFullName.split('/');\n      if (!owner || !repo) {\n        newRepoData[repoFullName] = { error: 'Invalid repository format' };\n        continue;\n      }\n\n      const deployments = {};\n      for (const env of deploymentEnvironments) {\n        deployments[env] = await getDeploymentInfo(owner, repo, env); // Use getDeploymentInfo\n      }\n\n      // Fetch multiple Trivy scan runs with their details\n      const trivyScans = await getLatestWorkflowRuns(owner, repo, trivyWorkflowFileName);\n\n      newRepoData[repoFullName] = {\n        deployments,\n        trivyScans,\n      };\n    }\n    setRepoData(newRepoData);\n    setLoading(false);\n  }, [githubToken, repos, trivyWorkflowFileName, deploymentEnvironments, getDeploymentInfo, getLatestWorkflowRuns]); // Recreate if these dependencies change\n\n  // Effect to fetch data when repos or token changes\n  useEffect(() => {\n    fetchAllRepoData();\n  }, [fetchAllRepoData]);\n\n  // Handler for adding a new repository\n  const handleAddRepo = () => {\n    const trimmedRepo = newRepo.trim();\n    if (trimmedRepo && !repos.includes(trimmedRepo)) {\n      setRepos([...repos, trimmedRepo]);\n      setNewRepo('');\n    }\n  };\n\n  // Handler for removing a repository\n  const handleRemoveRepo = (repoToRemove) => {\n    setRepos(repos.filter(repo => repo !== repoToRemove));\n    setRepoData(prevData => {\n      const newData = { ...prevData };\n      delete newData[repoToRemove];\n      return newData;\n    });\n  };\n\n  // Handler for adding a new environment\n  const handleAddEnvironment = () => {\n    const trimmedEnv = newEnvironment.trim().toLowerCase();\n    if (trimmedEnv && !deploymentEnvironments.includes(trimmedEnv)) {\n      setDeploymentEnvironments([...deploymentEnvironments, trimmedEnv]);\n      setNewEnvironment('');\n    }\n  };\n\n  // Handler for removing an environment\n  const handleRemoveEnvironment = (envToRemove) => {\n    setDeploymentEnvironments(deploymentEnvironments.filter(env => env !== envToRemove));\n  };\n\n  // Helper to format date\n  const formatDate = (isoString) => {\n    if (!isoString || isoString === '#') return 'N/A';\n    try {\n      return new Date(isoString).toLocaleString();\n    } catch (e) {\n      return 'Invalid Date';\n    }\n  };\n\n\n  // Helper to get color for workflow run conclusions\n  const getConclusionColor = (conclusion) => {\n    switch (conclusion) {\n      case 'success':\n        return 'bg-green-500';\n      case 'failure':\n        return 'bg-red-500';\n      case 'neutral':\n        return 'bg-gray-500';\n      case 'cancelled':\n        return 'bg-yellow-500';\n      case 'skipped':\n        return 'bg-indigo-500';\n      case 'timed_out':\n        return 'bg-orange-500';\n      case 'action_required':\n        return 'bg-purple-500';\n      default:\n        return 'bg-blue-400';\n    }\n  };\n\n  // Helper to determine if Trivy summary should be highlighted\n  const shouldHighlightTrivySummary = (run) => {\n    return run.lowCount > 0 || run.mediumCount > 0 || run.highCount > 0 || run.criticalCount > 0;\n  };\n\n  return (\n      <div className=\"min-h-screen bg-gradient-to-br from-gray-900 to-black text-gray-100 p-4 font-inter\">\n        <div className=\"container mx-auto p-6 bg-gray-800 rounded-xl shadow-2xl\">\n          <h1 className=\"text-4xl font-extrabold text-center mb-8 text-transparent bg-clip-text bg-gradient-to-r from-purple-400 to-pink-600\">\n            GitHub Repo Status Dashboard\n          </h1>\n\n          {/* GitHub Token Input */}\n          <div className=\"mb-8 p-6 bg-gray-700 rounded-lg shadow-inner\">\n            <label htmlFor=\"githubToken\" className=\"block text-lg font-semibold mb-2 text-purple-300\">\n              GitHub Personal Access Token (PAT):\n            </label>\n            <input\n                type=\"password\"\n                id=\"githubToken\"\n                className=\"w-full p-3 rounded-md bg-gray-900 border border-gray-600 focus:border-purple-500 focus:ring focus:ring-purple-500 focus:ring-opacity-50 text-white\"\n                value={githubToken}\n                onChange={(e) => setGithubToken(e.target.value)}\n                placeholder=\"Enter your GitHub PAT (e.g., gh_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx)\"\n            />\n            <p className=\"text-sm text-gray-400 mt-2\">\n              Your PAT is stored locally in your browser. It needs 'repo' (or 'repo:status') and 'actions:read' scopes.\n            </p>\n          </div>\n\n          {/* Configuration Section */}\n          <div className=\"mb-8 p-6 bg-gray-700 rounded-lg shadow-inner\">\n            <h2 className=\"text-2xl font-bold mb-4 text-pink-300\">Configuration</h2>\n\n            {/* Trivy Workflow File Name */}\n            <div className=\"mb-4\">\n              <label htmlFor=\"trivyWorkflow\" className=\"block text-lg font-semibold mb-2 text-purple-300\">\n                Trivy Workflow File Name:\n              </label>\n              <input\n                  type=\"text\"\n                  id=\"trivyWorkflow\"\n                  className=\"w-full p-3 rounded-md bg-gray-900 border border-gray-600 focus:border-purple-500 focus:ring focus:ring-purple-500 focus:ring-opacity-50 text-white\"\n                  value={trivyWorkflowFileName}\n                  onChange={(e) => setTrivyWorkflowFileName(e.target.value)}\n                  placeholder=\"e.g., trivy-scan.yml\"\n              />\n              <p className=\"text-sm text-gray-400 mt-2\">\n                The exact filename of your Trivy GitHub Actions workflow (e.g., `trivy-scan.yml`).\n              </p>\n            </div>\n\n            {/* Deployment Environments */}\n            <div>\n              <label className=\"block text-lg font-semibold mb-2 text-purple-300\">\n                Deployment Environments to Monitor:\n              </label>\n              <div className=\"flex flex-wrap gap-2 mb-2\">\n                {deploymentEnvironments.map((env) => (\n                    <span key={env} className=\"flex items-center bg-purple-600 text-white text-sm px-3 py-1 rounded-full shadow-md\">\n                                    {env}\n                      <button\n                          onClick={() => handleRemoveEnvironment(env)}\n                          className=\"ml-2 text-purple-200 hover:text-white focus:outline-none\"\n                      >\n                                        &times;\n                                    </button>\n                                </span>\n                ))}\n              </div>\n              <div className=\"flex gap-2\">\n                <input\n                    type=\"text\"\n                    className=\"flex-grow p-3 rounded-md bg-gray-900 border border-gray-600 focus:border-purple-500 focus:ring focus:ring-purple-500 focus:ring-opacity-50 text-white\"\n                    value={newEnvironment}\n                    onChange={(e) => setNewEnvironment(e.target.value)}\n                    placeholder=\"Add new environment (e.g., dev)\"\n                    onKeyPress={(e) => {\n                      if (e.key === 'Enter') {\n                        handleAddEnvironment();\n                      }\n                    }}\n                />\n                <button\n                    onClick={handleAddEnvironment}\n                    className=\"px-5 py-3 bg-purple-700 hover:bg-purple-800 text-white font-bold rounded-md shadow-lg transition duration-300 ease-in-out transform hover:scale-105\"\n                >\n                  Add\n                </button>\n              </div>\n            </div>\n          </div>\n\n          {/* Add Repository Section */}\n          <div className=\"mb-8 p-6 bg-gray-700 rounded-lg shadow-inner\">\n            <h2 className=\"text-2xl font-bold mb-4 text-pink-300\">Manage Repositories</h2>\n            <div className=\"flex gap-2 mb-4\">\n              <input\n                  type=\"text\"\n                  className=\"flex-grow p-3 rounded-md bg-gray-900 border border-gray-600 focus:border-purple-500 focus:ring focus:ring-purple-500 focus:ring-opacity-50 text-white\"\n                  value={newRepo}\n                  onChange={(e) => setNewRepo(e.target.value)}\n                  placeholder=\"Add new repo (e.g., PrinterLogic/snmp-custom-data)\"\n                  onKeyPress={(e) => {\n                    if (e.key === 'Enter') {\n                      handleAddRepo();\n                    }\n                  }}\n              />\n              <button\n                  onClick={handleAddRepo}\n                  className=\"px-5 py-3 bg-green-600 hover:bg-green-700 text-white font-bold rounded-md shadow-lg transition duration-300 ease-in-out transform hover:scale-105\"\n              >\n                Add Repo\n              </button>\n            </div>\n            <div className=\"flex flex-wrap gap-2\">\n              {repos.map((repo) => (\n                  <span key={repo} className=\"flex items-center bg-gray-600 text-white text-sm px-3 py-1 rounded-full shadow-md\">\n                                {repo}\n                    <button\n                        onClick={() => handleRemoveRepo(repo)}\n                        className=\"ml-2 text-gray-300 hover:text-white focus:outline-none\"\n                    >\n                                    &times;\n                                </button>\n                            </span>\n              ))}\n            </div>\n          </div>\n\n          {/* Action Buttons */}\n          <div className=\"flex justify-center gap-4 mb-8\">\n            <button\n                onClick={fetchAllRepoData}\n                disabled={loading || !githubToken || repos.length === 0}\n                className={`px-8 py-4 bg-blue-600 hover:bg-blue-700 text-white font-bold rounded-full shadow-xl transition duration-300 ease-in-out transform hover:scale-105 ${loading ? 'opacity-50 cursor-not-allowed' : ''}`}\n            >\n              {loading ? 'Refreshing...' : 'Refresh All Statuses'}\n            </button>\n            <button\n                onClick={() => {\n                  setRepos([]);\n                  setRepoData({});\n                  setError('');\n                }}\n                className=\"px-8 py-4 bg-red-600 hover:bg-red-700 text-white font-bold rounded-full shadow-xl transition duration-300 ease-in-out transform hover:scale-105\"\n            >\n              Clear All Repos\n            </button>\n          </div>\n\n          {/* Error Display */}\n          {error && (\n              <div className=\"bg-red-800 text-white p-4 rounded-lg mb-8 shadow-md\">\n                <p className=\"font-bold\">Error:</p>\n                <p>{error}</p>\n              </div>\n          )}\n\n          {/* Dashboard Display */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 gap-4\">\n            {repos.length === 0 && !loading && !error && (\n                <p className=\"col-span-full text-center text-gray-400 text-xl\">\n                  Add some repositories to start monitoring!\n                </p>\n            )}\n\n            {repos.map((repoFullName) => {\n              const data = repoData[repoFullName];\n              // const [owner, repoName] = repoFullName.split('/'); // owner and repoName are not directly used in rendering repo card title\n\n              return (\n                  <div key={repoFullName} className=\"bg-gray-700 rounded-xl shadow-lg p-6 border border-gray-600 hover:border-purple-500 transition duration-200 ease-in-out transform hover:scale-[1.02]\">\n                    <h3 className=\"text-2xl font-bold mb-4 text-purple-400 flex items-center justify-between\">\n                      <a\n                          href={`https://github.com/${repoFullName}`}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          className=\"hover:underline\"\n                      >\n                        {repoFullName}\n                      </a>\n                    </h3>\n\n                    {/* Deployment Statuses */}\n                    <div className=\"mb-4\">\n                      <h4 className=\"text-lg font-semibold text-pink-200 mb-2\">Deployments:</h4>\n                      {data?.deployments && Object.keys(data.deployments).length > 0 ? (\n                          Object.entries(data.deployments).map(([env, deploymentInfo]) => {\n                            // Add console log here\n                            console.log('Deployment Info for', env, ':', deploymentInfo);\n                            return (\n                                <div key={env} className=\"flex items-center mb-1\">\n                                  <span className=\"font-medium text-gray-300 w-24 capitalize\">{env}:</span>\n                                  {deploymentInfo?.latest ? (\n                                      <a\n                                          href={deploymentInfo.latest.url.replace('/statuses', '')} // Link to the deployment itself\n                                          target=\"_blank\"\n                                          rel=\"noopener noreferrer\"\n                                          className={`px-3 py-1 rounded-full text-sm font-bold text-white ${getStatusColor(deploymentInfo.latest.status)} mr-2 hover:opacity-80`} // Reverted to getStatusColor\n                                      >\n                                        {deploymentInfo.latest.status || 'N/A'}\n                                      </a>\n                                  ) : (\n                                      <span className=\"px-3 py-1 rounded-full text-sm font-bold text-white bg-gray-500 mr-2\">\n                                                            No Deployments\n                                                        </span>\n                                  )}\n\n                                  <span className={`text-xs ${getTimestampColor(deploymentInfo?.latest?.timestamp)}`}>\n                                                        {deploymentInfo?.latest ? formatDate(deploymentInfo.latest.timestamp) : ''}\n                                                    </span>\n                                </div>\n                            );\n                          })\n                      ) : (\n                          <p className=\"text-gray-400 text-sm\">No deployment data available or environments configured.</p>\n                      )}\n                    </div>\n\n                    {/* Trivy Scan Status - Last 5 Runs with Findings */}\n                    <div>\n                      <h4 className=\"text-lg font-semibold text-pink-200 mb-2\">Trivy Scan (Last 5 Runs):</h4>\n                      {data?.trivyScans && data.trivyScans.length > 0 ? (\n                          <div className=\"space-y-1\">\n                            {data.trivyScans.map((run, index) => (\n                                <div key={run.id || index} className=\"flex flex-col mb-2 p-2 bg-gray-600 rounded-md\">\n                                  <div className=\"flex items-center text-sm mb-1\">\n                                    <span className=\"font-medium text-gray-300 w-16\">Run {index + 1}:</span>\n                                    <a\n                                        href={run.url}\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                        className={`px-2 py-0.5 rounded-full text-xs font-bold text-white ${getConclusionColor(run.conclusion)} mr-2 hover:opacity-80`}\n                                    >\n                                      {run.conclusion || 'N/A'}\n                                    </a>\n                                    <span className=\"text-xs text-gray-400\">\n                                                            {formatDate(run.timestamp)}\n                                                        </span>\n                                  </div>\n                                  {run.vulnerabilitySummary && (\n                                      <p className={`text-xs ml-16 ${shouldHighlightTrivySummary(run) ? 'text-yellow-400' : 'text-gray-300'}`}>\n                                        {run.vulnerabilitySummary}\n                                      </p>\n                                  )}\n                                  {!run.vulnerabilitySummary && run.conclusion !== 'error' && (\n                                      <p className=\"text-xs text-gray-400 ml-16\">\n                                        Summary not found in logs.\n                                      </p>\n                                  )}\n                                </div>\n                            ))}\n                          </div>\n                      ) : (\n                          <p className=\"text-gray-400 text-sm\">No Trivy scan runs found or workflow not configured.</p>\n                      )}\n                    </div>\n                    {data?.error && (\n                        <div className=\"mt-4 text-red-400 text-sm\">\n                          Error: {data.error}\n                        </div>\n                    )}\n                  </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}